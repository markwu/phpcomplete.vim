call extend(g:php_builtin_functions, {
\ 'gd_info(': 'void | array',
\ 'getimagesize(': 'string $filename [, array &$imageinfo] | array',
\ 'getimagesizefromstring(': 'string $imagedata [, array &$imageinfo] | array',
\ 'image_type_to_extension(': 'int $imagetype [, bool $include_dot = TRUE] | string',
\ 'image_type_to_mime_type(': 'int $imagetype | string',
\ 'image2wbmp(': 'resource $image [, string $filename [, int $threshold]] | bool',
\ 'imageaffine(': 'resource $image, array $affine [, array $clip] | resource',
\ 'imageaffinematrixconcat(': 'array $m1, array $m2 | array',
\ 'imageaffinematrixget(': 'int $type [, mixed $options] | array',
\ 'imagealphablending(': 'resource $image, bool $blendmode | bool',
\ 'imageantialias(': 'resource $image, bool $enabled | bool',
\ 'imagearc(': 'resource $image, int $cx, int $cy, int $width, int $height, int $start, int $end, int $color | bool',
\ 'imagechar(': 'resource $image, int $font, int $x, int $y, string $c, int $color | bool',
\ 'imagecharup(': 'resource $image, int $font, int $x, int $y, string $c, int $color | bool',
\ 'imagecolorallocate(': 'resource $image, int $red, int $green, int $blue | int',
\ 'imagecolorallocatealpha(': 'resource $image, int $red, int $green, int $blue, int $alpha | int',
\ 'imagecolorat(': 'resource $image, int $x, int $y | int',
\ 'imagecolorclosest(': 'resource $image, int $red, int $green, int $blue | int',
\ 'imagecolorclosestalpha(': 'resource $image, int $red, int $green, int $blue, int $alpha | int',
\ 'imagecolorclosesthwb(': 'resource $image, int $red, int $green, int $blue | int',
\ 'imagecolordeallocate(': 'resource $image, int $color | bool',
\ 'imagecolorexact(': 'resource $image, int $red, int $green, int $blue | int',
\ 'imagecolorexactalpha(': 'resource $image, int $red, int $green, int $blue, int $alpha | int',
\ 'imagecolormatch(': 'resource $image1, resource $image2 | bool',
\ 'imagecolorresolve(': 'resource $image, int $red, int $green, int $blue | int',
\ 'imagecolorresolvealpha(': 'resource $image, int $red, int $green, int $blue, int $alpha | int',
\ 'imagecolorset(': 'resource $image, int $index, int $red, int $green, int $blue [, int $alpha = 0] | void',
\ 'imagecolorsforindex(': 'resource $image, int $index | array',
\ 'imagecolorstotal(': 'resource $image | int',
\ 'imagecolortransparent(': 'resource $image [, int $color] | int',
\ 'imageconvolution(': 'resource $image, array $matrix, float $div, float $offset | bool',
\ 'imagecopy(': 'resource $dst_im, resource $src_im, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_w, int $src_h | bool',
\ 'imagecopymerge(': 'resource $dst_im, resource $src_im, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_w, int $src_h, int $pct | bool',
\ 'imagecopymergegray(': 'resource $dst_im, resource $src_im, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_w, int $src_h, int $pct | bool',
\ 'imagecopyresampled(': 'resource $dst_image, resource $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $dst_w, int $dst_h, int $src_w, int $src_h | bool',
\ 'imagecopyresized(': 'resource $dst_image, resource $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $dst_w, int $dst_h, int $src_w, int $src_h | bool',
\ 'imagecreate(': 'int $width, int $height | resource',
\ 'imagecreatefromgd(': 'string $filename | resource',
\ 'imagecreatefromgd2(': 'string $filename | resource',
\ 'imagecreatefromgd2part(': 'string $filename, int $srcX, int $srcY, int $width, int $height | resource',
\ 'imagecreatefromgif(': 'string $filename | resource',
\ 'imagecreatefromjpeg(': 'string $filename | resource',
\ 'imagecreatefrompng(': 'string $filename | resource',
\ 'imagecreatefromstring(': 'string $image | resource',
\ 'imagecreatefromwbmp(': 'string $filename | resource',
\ 'imagecreatefromwebp(': 'string $filename | resource',
\ 'imagecreatefromxbm(': 'string $filename | resource',
\ 'imagecreatefromxpm(': 'string $filename | resource',
\ 'imagecreatetruecolor(': 'int $width, int $height | resource',
\ 'imagecrop(': 'resource $image, array $rect | resource',
\ 'imagecropauto(': 'resource $image [, int $mode = -1 [, float $threshold = .5 [, int $color = -1]]] | resource',
\ 'imagedashedline(': 'resource $image, int $x1, int $y1, int $x2, int $y2, int $color | bool',
\ 'imagedestroy(': 'resource $image | bool',
\ 'imageellipse(': 'resource $image, int $cx, int $cy, int $width, int $height, int $color | bool',
\ 'imagefill(': 'resource $image, int $x, int $y, int $color | bool',
\ 'imagefilledarc(': 'resource $image, int $cx, int $cy, int $width, int $height, int $start, int $end, int $color, int $style | bool',
\ 'imagefilledellipse(': 'resource $image, int $cx, int $cy, int $width, int $height, int $color | bool',
\ 'imagefilledpolygon(': 'resource $image, array $points, int $num_points, int $color | bool',
\ 'imagefilledrectangle(': 'resource $image, int $x1, int $y1, int $x2, int $y2, int $color | bool',
\ 'imagefilltoborder(': 'resource $image, int $x, int $y, int $border, int $color | bool',
\ 'imagefilter(': 'resource $image, int $filtertype [, int $arg1 [, int $arg2 [, int $arg3 [, int $arg4]]]] | bool',
\ 'imageflip(': 'resource $image, int $mode | bool',
\ 'imagefontheight(': 'int $font | int',
\ 'imagefontwidth(': 'int $font | int',
\ 'imageftbbox(': 'float $size, float $angle, string $fontfile, string $text [, array $extrainfo] | array',
\ 'imagefttext(': 'resource $image, float $size, float $angle, int $x, int $y, int $color, string $fontfile, string $text [, array $extrainfo] | array',
\ 'imagegammacorrect(': 'resource $image, float $inputgamma, float $outputgamma | bool',
\ 'imagegd(': 'resource $image [, string $filename] | bool',
\ 'imagegd2(': 'resource $image [, string $filename [, int $chunk_size [, int $type = IMG_GD2_RAW]]] | bool',
\ 'imagegif(': 'resource $image [, string $filename] | bool',
\ 'imagegrabscreen(': 'void | resource',
\ 'imagegrabwindow(': 'int $window_handle [, int $client_area = 0] | resource',
\ 'imageinterlace(': 'resource $image [, int $interlace = 0] | int',
\ 'imageistruecolor(': 'resource $image | bool',
\ 'imagejpeg(': 'resource $image [, string $filename [, int $quality]] | bool',
\ 'imagelayereffect(': 'resource $image, int $effect | bool',
\ 'imageline(': 'resource $image, int $x1, int $y1, int $x2, int $y2, int $color | bool',
\ 'imageloadfont(': 'string $file | int',
\ 'imagepalettecopy(': 'resource $destination, resource $source | void',
\ 'imagepalettetotruecolor(': 'resource $src | bool',
\ 'imagepng(': 'resource $image [, string $filename [, int $quality [, int $filters]]] | bool',
\ 'imagepolygon(': 'resource $image, array $points, int $num_points, int $color | bool',
\ 'imagepsbbox(': 'string $text, resource $font, int $size | array',
\ 'imagepsencodefont(': 'resource $font_index, string $encodingfile | bool',
\ 'imagepsextendfont(': 'resource $font_index, float $extend | bool',
\ 'imagepsfreefont(': 'resource $font_index | bool',
\ 'imagepsloadfont(': 'string $filename | resource',
\ 'imagepsslantfont(': 'resource $font_index, float $slant | bool',
\ 'imagepstext(': 'resource $image, string $text, resource $font_index, int $size, int $foreground, int $background, int $x, int $y [, int $space = 0 [, int $tightness = 0 [, float $angle = 0.0 [, int $antialias_steps = 4]]]] | array',
\ 'imagerectangle(': 'resource $image, int $x1, int $y1, int $x2, int $y2, int $color | bool',
\ 'imagerotate(': 'resource $image, float $angle, int $bgd_color [, int $ignore_transparent = 0] | resource',
\ 'imagesavealpha(': 'resource $image, bool $saveflag | bool',
\ 'imagescale(': 'resource $image, int $new_width [, int $new_height = -1 [, int $mode = IMG_BILINEAR_FIXED]] | resource',
\ 'imagesetbrush(': 'resource $image, resource $brush | bool',
\ 'imagesetinterpolation(': 'resource $image [, int $method = IMG_BILINEAR_FIXED] | bool',
\ 'imagesetpixel(': 'resource $image, int $x, int $y, int $color | bool',
\ 'imagesetstyle(': 'resource $image, array $style | bool',
\ 'imagesetthickness(': 'resource $image, int $thickness | bool',
\ 'imagesettile(': 'resource $image, resource $tile | bool',
\ 'imagestring(': 'resource $image, int $font, int $x, int $y, string $string, int $color | bool',
\ 'imagestringup(': 'resource $image, int $font, int $x, int $y, string $string, int $color | bool',
\ 'imagesx(': 'resource $image | int',
\ 'imagesy(': 'resource $image | int',
\ 'imagetruecolortopalette(': 'resource $image, bool $dither, int $ncolors | bool',
\ 'imagettfbbox(': 'float $size, float $angle, string $fontfile, string $text | array',
\ 'imagettftext(': 'resource $image, float $size, float $angle, int $x, int $y, int $color, string $fontfile, string $text | array',
\ 'imagetypes(': 'void | int',
\ 'imagewbmp(': 'resource $image [, string $filename [, int $foreground]] | bool',
\ 'imagewebp(': 'resource $image, string $filename | bool',
\ 'imagexbm(': 'resource $image, string $filename [, int $foreground] | bool',
\ 'iptcembed(': 'string $iptcdata, string $jpeg_file_name [, int $spool] | mixed',
\ 'iptcparse(': 'string $iptcblock | array',
\ 'jpeg2wbmp(': 'string $jpegname, string $wbmpname, int $dest_height, int $dest_width, int $threshold | bool',
\ 'png2wbmp(': 'string $pngname, string $wbmpname, int $dest_height, int $dest_width, int $threshold | bool',
\ })
