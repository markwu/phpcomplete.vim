call extend(g:php_builtin_classes, {
\'Reflection': {
\   'constants': {
\   },
\   'properties': {
\   },
\   'static_properties': {
\   },
\   'methods': {
\   },
\   'static_methods': {
\     'export': { 'signature': 'Reflector $reflector [, bool $return = false] | string', 'return_type': 'string'},
\     'getModifierNames': { 'signature': 'int $modifiers | array', 'return_type': 'array'},
\   },
\},
\'ReflectionClass': {
\   'constants': {
\     'IS_IMPLICIT_ABSTRACT': '16',
\     'IS_EXPLICIT_ABSTRACT': '32',
\     'IS_FINAL': '64',
\   },
\   'properties': {
\     'name': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': 'mixed $argument', 'return_type': ''},
\     'getConstant': { 'signature': 'string $name | mixed', 'return_type': 'mixed'},
\     'getConstants': { 'signature': 'void | array', 'return_type': 'array'},
\     'getConstructor': { 'signature': 'void | ReflectionMethod', 'return_type': 'ReflectionMethod'},
\     'getDefaultProperties': { 'signature': 'void | array', 'return_type': 'array'},
\     'getDocComment': { 'signature': 'void | string', 'return_type': 'string'},
\     'getEndLine': { 'signature': 'void | int', 'return_type': 'int'},
\     'getExtension': { 'signature': 'void | ReflectionExtension', 'return_type': 'ReflectionExtension'},
\     'getExtensionName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getFileName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getInterfaceNames': { 'signature': 'void | array', 'return_type': 'array'},
\     'getInterfaces': { 'signature': 'void | array', 'return_type': 'array'},
\     'getMethod': { 'signature': 'string $name | ReflectionMethod', 'return_type': 'ReflectionMethod'},
\     'getMethods': { 'signature': '[ int $filter] | array', 'return_type': 'array'},
\     'getModifiers': { 'signature': 'void | int', 'return_type': 'int'},
\     'getName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getNamespaceName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getParentClass': { 'signature': 'void | object', 'return_type': 'object'},
\     'getProperties': { 'signature': '[ int $filter] | array', 'return_type': 'array'},
\     'getProperty': { 'signature': 'string $name | ReflectionProperty', 'return_type': 'ReflectionProperty'},
\     'getShortName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getStartLine': { 'signature': 'void | int', 'return_type': 'int'},
\     'getStaticProperties': { 'signature': 'void | array', 'return_type': 'array'},
\     'getStaticPropertyValue': { 'signature': 'string $name [, mixed &$def_value] | mixed', 'return_type': 'mixed'},
\     'getTraitAliases': { 'signature': 'void | array', 'return_type': 'array'},
\     'getTraitNames': { 'signature': 'void | array', 'return_type': 'array'},
\     'getTraits': { 'signature': 'void | array', 'return_type': 'array'},
\     'hasConstant': { 'signature': 'string $name | bool', 'return_type': 'bool'},
\     'hasMethod': { 'signature': 'string $name | bool', 'return_type': 'bool'},
\     'hasProperty': { 'signature': 'string $name | bool', 'return_type': 'bool'},
\     'implementsInterface': { 'signature': 'string $interface | bool', 'return_type': 'bool'},
\     'inNamespace': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isAbstract': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isCloneable': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isFinal': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isInstance': { 'signature': 'object $object | bool', 'return_type': 'bool'},
\     'isInstantiable': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isInterface': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isInternal': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isIterateable': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isSubclassOf': { 'signature': 'string $class | bool', 'return_type': 'bool'},
\     'isTrait': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isUserDefined': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'newInstance': { 'signature': 'mixed $args [, mixed $...] | object', 'return_type': 'object'},
\     'newInstanceArgs': { 'signature': '[ array $args] | object', 'return_type': 'object'},
\     'newInstanceWithoutConstructor': { 'signature': 'void | object', 'return_type': 'object'},
\     'setStaticPropertyValue': { 'signature': 'string $name, string $value | void', 'return_type': 'void'},
\     '__toString': { 'signature': 'void | string', 'return_type': 'string'},
\   },
\   'static_methods': {
\     'export': { 'signature': 'mixed $argument [, bool $return = false] | string', 'return_type': 'string'},
\   },
\},
\'ReflectionException': {
\   'constants': {
\   },
\   'properties': {
\     'message': { 'initializer': '', 'type': 'string'},
\     'code': { 'initializer': '', 'type': 'int'},
\     'file': { 'initializer': '', 'type': 'string'},
\     'line': { 'initializer': '', 'type': 'int'},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     'getMessage': { 'signature': 'void | string', 'return_type': 'string'},
\     'getPrevious': { 'signature': 'void | Exception', 'return_type': 'Exception'},
\     'getCode': { 'signature': 'void | mixed', 'return_type': 'mixed'},
\     'getFile': { 'signature': 'void | string', 'return_type': 'string'},
\     'getLine': { 'signature': 'void | int', 'return_type': 'int'},
\     'getTrace': { 'signature': 'void | array', 'return_type': 'array'},
\     'getTraceAsString': { 'signature': 'void | string', 'return_type': 'string'},
\     '__toString': { 'signature': 'void | string', 'return_type': 'string'},
\     '__clone': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\   },
\},
\'ReflectionExtension': {
\   'constants': {
\   },
\   'properties': {
\     'name': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__clone': { 'signature': 'void | void', 'return_type': 'void'},
\     '__construct': { 'signature': 'string $name', 'return_type': ''},
\     'getClasses': { 'signature': 'void | array', 'return_type': 'array'},
\     'getClassNames': { 'signature': 'void | array', 'return_type': 'array'},
\     'getConstants': { 'signature': 'void | array', 'return_type': 'array'},
\     'getDependencies': { 'signature': 'void | array', 'return_type': 'array'},
\     'getFunctions': { 'signature': 'void | array', 'return_type': 'array'},
\     'getINIEntries': { 'signature': 'void | array', 'return_type': 'array'},
\     'getName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getVersion': { 'signature': 'void | string', 'return_type': 'string'},
\     'info': { 'signature': 'void | void', 'return_type': 'void'},
\     'isPersistent': { 'signature': 'void | void', 'return_type': 'void'},
\     'isTemporary': { 'signature': 'void | void', 'return_type': 'void'},
\     '__toString': { 'signature': 'void | string', 'return_type': 'string'},
\   },
\   'static_methods': {
\     'export': { 'signature': 'string $name [, string $return = false] | string', 'return_type': 'string'},
\   },
\},
\'ReflectionFunction': {
\   'constants': {
\     'IS_DEPRECATED': '262144',
\   },
\   'properties': {
\     'name': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': 'mixed $name', 'return_type': ''},
\     'getClosure': { 'signature': 'void | Closure', 'return_type': 'Closure'},
\     'invoke': { 'signature': '[ mixed $parameter [, mixed $...]] | mixed', 'return_type': 'mixed'},
\     'invokeArgs': { 'signature': 'array $args | mixed', 'return_type': 'mixed'},
\     'isDisabled': { 'signature': 'void | bool', 'return_type': 'bool'},
\     '__toString': { 'signature': 'void | void', 'return_type': 'void'},
\     '__clone': { 'signature': 'void | void', 'return_type': 'void'},
\     'getClosureScopeClass': { 'signature': 'void | ReflectionClass', 'return_type': 'ReflectionClass'},
\     'getClosureThis': { 'signature': 'void | object', 'return_type': 'object'},
\     'getDocComment': { 'signature': 'void | string', 'return_type': 'string'},
\     'getEndLine': { 'signature': 'void | int', 'return_type': 'int'},
\     'getExtension': { 'signature': 'void | ReflectionExtension', 'return_type': 'ReflectionExtension'},
\     'getExtensionName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getFileName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getNamespaceName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getNumberOfParameters': { 'signature': 'void | int', 'return_type': 'int'},
\     'getNumberOfRequiredParameters': { 'signature': 'void | int', 'return_type': 'int'},
\     'getParameters': { 'signature': 'void | array', 'return_type': 'array'},
\     'getShortName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getStartLine': { 'signature': 'void | int', 'return_type': 'int'},
\     'getStaticVariables': { 'signature': 'void | array', 'return_type': 'array'},
\     'inNamespace': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isClosure': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isDeprecated': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isGenerator': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isInternal': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isUserDefined': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'returnsReference': { 'signature': 'void | bool', 'return_type': 'bool'},
\   },
\   'static_methods': {
\     'export': { 'signature': 'string $name [, string $return] | string', 'return_type': 'string'},
\   },
\},
\'ReflectionFunctionAbstract': {
\   'constants': {
\   },
\   'properties': {
\     'name': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__clone': { 'signature': 'void | void', 'return_type': 'void'},
\     'getClosureScopeClass': { 'signature': 'void | ReflectionClass', 'return_type': 'ReflectionClass'},
\     'getClosureThis': { 'signature': 'void | object', 'return_type': 'object'},
\     'getDocComment': { 'signature': 'void | string', 'return_type': 'string'},
\     'getEndLine': { 'signature': 'void | int', 'return_type': 'int'},
\     'getExtension': { 'signature': 'void | ReflectionExtension', 'return_type': 'ReflectionExtension'},
\     'getExtensionName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getFileName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getNamespaceName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getNumberOfParameters': { 'signature': 'void | int', 'return_type': 'int'},
\     'getNumberOfRequiredParameters': { 'signature': 'void | int', 'return_type': 'int'},
\     'getParameters': { 'signature': 'void | array', 'return_type': 'array'},
\     'getShortName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getStartLine': { 'signature': 'void | int', 'return_type': 'int'},
\     'getStaticVariables': { 'signature': 'void | array', 'return_type': 'array'},
\     'inNamespace': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isClosure': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isDeprecated': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isGenerator': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isInternal': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isUserDefined': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'returnsReference': { 'signature': 'void | bool', 'return_type': 'bool'},
\     '__toString': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\   },
\},
\'ReflectionMethod': {
\   'constants': {
\     'IS_STATIC': '1',
\     'IS_PUBLIC': '256',
\     'IS_PROTECTED': '512',
\     'IS_PRIVATE': '1024',
\     'IS_ABSTRACT': '2',
\     'IS_FINAL': '4',
\   },
\   'properties': {
\     'name': { 'initializer': '', 'type': ''},
\     'class': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': 'mixed $class, string $name', 'return_type': ''},
\     'getClosure': { 'signature': 'object $object | Closure', 'return_type': 'Closure'},
\     'getDeclaringClass': { 'signature': 'void | ReflectionClass', 'return_type': 'ReflectionClass'},
\     'getModifiers': { 'signature': 'void | int', 'return_type': 'int'},
\     'getPrototype': { 'signature': 'void | ReflectionMethod', 'return_type': 'ReflectionMethod'},
\     'invoke': { 'signature': 'object $object [, mixed $parameter [, mixed $...]] | mixed', 'return_type': 'mixed'},
\     'invokeArgs': { 'signature': 'object $object, array $args | mixed', 'return_type': 'mixed'},
\     'isAbstract': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isConstructor': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isDestructor': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isFinal': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isPrivate': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isProtected': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isPublic': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isStatic': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'setAccessible': { 'signature': 'bool $accessible | void', 'return_type': 'void'},
\     '__toString': { 'signature': 'void | void', 'return_type': 'void'},
\     '__clone': { 'signature': 'void | void', 'return_type': 'void'},
\     'getClosureScopeClass': { 'signature': 'void | ReflectionClass', 'return_type': 'ReflectionClass'},
\     'getClosureThis': { 'signature': 'void | object', 'return_type': 'object'},
\     'getDocComment': { 'signature': 'void | string', 'return_type': 'string'},
\     'getEndLine': { 'signature': 'void | int', 'return_type': 'int'},
\     'getExtension': { 'signature': 'void | ReflectionExtension', 'return_type': 'ReflectionExtension'},
\     'getExtensionName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getFileName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getNamespaceName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getNumberOfParameters': { 'signature': 'void | int', 'return_type': 'int'},
\     'getNumberOfRequiredParameters': { 'signature': 'void | int', 'return_type': 'int'},
\     'getParameters': { 'signature': 'void | array', 'return_type': 'array'},
\     'getShortName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getStartLine': { 'signature': 'void | int', 'return_type': 'int'},
\     'getStaticVariables': { 'signature': 'void | array', 'return_type': 'array'},
\     'inNamespace': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isClosure': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isDeprecated': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isGenerator': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isInternal': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isUserDefined': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'returnsReference': { 'signature': 'void | bool', 'return_type': 'bool'},
\   },
\   'static_methods': {
\     'export': { 'signature': 'string $class, string $name [, bool $return = false] | string', 'return_type': 'string'},
\   },
\},
\'ReflectionObject': {
\   'constants': {
\     'IS_IMPLICIT_ABSTRACT': '16',
\     'IS_EXPLICIT_ABSTRACT': '32',
\     'IS_FINAL': '64',
\   },
\   'properties': {
\     'name': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': 'mixed $argument', 'return_type': ''},
\     'getConstant': { 'signature': 'string $name | mixed', 'return_type': 'mixed'},
\     'getConstants': { 'signature': 'void | array', 'return_type': 'array'},
\     'getConstructor': { 'signature': 'void | ReflectionMethod', 'return_type': 'ReflectionMethod'},
\     'getDefaultProperties': { 'signature': 'void | array', 'return_type': 'array'},
\     'getDocComment': { 'signature': 'void | string', 'return_type': 'string'},
\     'getEndLine': { 'signature': 'void | int', 'return_type': 'int'},
\     'getExtension': { 'signature': 'void | ReflectionExtension', 'return_type': 'ReflectionExtension'},
\     'getExtensionName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getFileName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getInterfaceNames': { 'signature': 'void | array', 'return_type': 'array'},
\     'getInterfaces': { 'signature': 'void | array', 'return_type': 'array'},
\     'getMethod': { 'signature': 'string $name | ReflectionMethod', 'return_type': 'ReflectionMethod'},
\     'getMethods': { 'signature': '[ int $filter] | array', 'return_type': 'array'},
\     'getModifiers': { 'signature': 'void | int', 'return_type': 'int'},
\     'getName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getNamespaceName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getParentClass': { 'signature': 'void | object', 'return_type': 'object'},
\     'getProperties': { 'signature': '[ int $filter] | array', 'return_type': 'array'},
\     'getProperty': { 'signature': 'string $name | ReflectionProperty', 'return_type': 'ReflectionProperty'},
\     'getShortName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getStartLine': { 'signature': 'void | int', 'return_type': 'int'},
\     'getStaticProperties': { 'signature': 'void | array', 'return_type': 'array'},
\     'getStaticPropertyValue': { 'signature': 'string $name [, mixed &$def_value] | mixed', 'return_type': 'mixed'},
\     'getTraitAliases': { 'signature': 'void | array', 'return_type': 'array'},
\     'getTraitNames': { 'signature': 'void | array', 'return_type': 'array'},
\     'getTraits': { 'signature': 'void | array', 'return_type': 'array'},
\     'hasConstant': { 'signature': 'string $name | bool', 'return_type': 'bool'},
\     'hasMethod': { 'signature': 'string $name | bool', 'return_type': 'bool'},
\     'hasProperty': { 'signature': 'string $name | bool', 'return_type': 'bool'},
\     'implementsInterface': { 'signature': 'string $interface | bool', 'return_type': 'bool'},
\     'inNamespace': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isAbstract': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isCloneable': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isFinal': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isInstance': { 'signature': 'object $object | bool', 'return_type': 'bool'},
\     'isInstantiable': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isInterface': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isInternal': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isIterateable': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isSubclassOf': { 'signature': 'string $class | bool', 'return_type': 'bool'},
\     'isTrait': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isUserDefined': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'newInstance': { 'signature': 'mixed $args [, mixed $...] | object', 'return_type': 'object'},
\     'newInstanceArgs': { 'signature': '[ array $args] | object', 'return_type': 'object'},
\     'newInstanceWithoutConstructor': { 'signature': 'void | object', 'return_type': 'object'},
\     'setStaticPropertyValue': { 'signature': 'string $name, string $value | void', 'return_type': 'void'},
\     '__toString': { 'signature': 'void | string', 'return_type': 'string'},
\   },
\   'static_methods': {
\     'export': { 'signature': 'mixed $argument [, bool $return = false] | string', 'return_type': 'string'},
\   },
\},
\'ReflectionParameter': {
\   'constants': {
\   },
\   'properties': {
\     'name': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     'allowsNull': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'canBePassedByValue': { 'signature': 'void | bool', 'return_type': 'bool'},
\     '__clone': { 'signature': 'void | void', 'return_type': 'void'},
\     '__construct': { 'signature': 'string $function, string $parameter', 'return_type': ''},
\     'getClass': { 'signature': 'void | ReflectionClass', 'return_type': 'ReflectionClass'},
\     'getDeclaringClass': { 'signature': 'void | ReflectionClass', 'return_type': 'ReflectionClass'},
\     'getDeclaringFunction': { 'signature': 'void | ReflectionFunctionAbstract', 'return_type': 'ReflectionFunctionAbstract'},
\     'getDefaultValue': { 'signature': 'void | mixed', 'return_type': 'mixed'},
\     'getDefaultValueConstantName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getPosition': { 'signature': 'void | int', 'return_type': 'int'},
\     'isArray': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isCallable': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isDefaultValueAvailable': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isDefaultValueConstant': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isOptional': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isPassedByReference': { 'signature': 'void | bool', 'return_type': 'bool'},
\     '__toString': { 'signature': 'void | string', 'return_type': 'string'},
\   },
\   'static_methods': {
\     'export': { 'signature': 'string $function, string $parameter [, bool $return] | string', 'return_type': 'string'},
\   },
\},
\'ReflectionProperty': {
\   'constants': {
\     'IS_STATIC': '1',
\     'IS_PUBLIC': '256',
\     'IS_PROTECTED': '512',
\     'IS_PRIVATE': '1024',
\   },
\   'properties': {
\     'name': { 'initializer': '', 'type': ''},
\     'class': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__clone': { 'signature': 'void | void', 'return_type': 'void'},
\     '__construct': { 'signature': 'mixed $class, string $name', 'return_type': ''},
\     'getDeclaringClass': { 'signature': 'void | ReflectionClass', 'return_type': 'ReflectionClass'},
\     'getDocComment': { 'signature': 'void | string', 'return_type': 'string'},
\     'getModifiers': { 'signature': 'void | int', 'return_type': 'int'},
\     'getName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getValue': { 'signature': '[ object $object] | mixed', 'return_type': 'mixed'},
\     'isDefault': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isPrivate': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isProtected': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isPublic': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'isStatic': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'setAccessible': { 'signature': 'bool $accessible | void', 'return_type': 'void'},
\     'setValue': { 'signature': 'object $object, mixed $value | void', 'return_type': 'void'},
\     '__toString': { 'signature': 'void | string', 'return_type': 'string'},
\   },
\   'static_methods': {
\     'export': { 'signature': 'mixed $class, string $name [, bool $return] | string', 'return_type': 'string'},
\   },
\},
\'ReflectionZendExtension': {
\   'constants': {
\   },
\   'properties': {
\     'name': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__clone': { 'signature': 'void | void', 'return_type': 'void'},
\     '__construct': { 'signature': 'string $name', 'return_type': ''},
\     'getAuthor': { 'signature': 'void | string', 'return_type': 'string'},
\     'getCopyright': { 'signature': 'void | string', 'return_type': 'string'},
\     'getName': { 'signature': 'void | string', 'return_type': 'string'},
\     'getURL': { 'signature': 'void | string', 'return_type': 'string'},
\     'getVersion': { 'signature': 'void | string', 'return_type': 'string'},
\     '__toString': { 'signature': 'void | string', 'return_type': 'string'},
\   },
\   'static_methods': {
\     'export': { 'signature': 'string $name [, string $return] | string', 'return_type': 'string'},
\   },
\},
\'Reflector': {
\   'constants': {
\   },
\   'properties': {
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__toString': { 'signature': 'void | string', 'return_type': 'string'},
\   },
\   'static_methods': {
\     'export': { 'signature': 'void | string', 'return_type': 'string'},
\   },
\},
\})
