call extend(g:php_builtin_classes, {
\'Ev': {
\   'constants': {
\     'FLAG_AUTO': '0',
\     'FLAG_NOENV': '16777216',
\     'FLAG_FORKCHECK': '33554432',
\     'FLAG_NOINOTIFY': '1048576',
\     'FLAG_SIGNALFD': '2097152',
\     'FLAG_NOSIGMASK': '4194304',
\     'RUN_NOWAIT': '1',
\     'RUN_ONCE': '2',
\     'BREAK_CANCEL': '0',
\     'BREAK_ONE': '1',
\     'BREAK_ALL': '2',
\     'MINPRI': '-2',
\     'MAXPRI': '2',
\     'READ': '1',
\     'WRITE': '2',
\     'TIMER': '256',
\     'PERIODIC': '512',
\     'SIGNAL': '1024',
\     'CHILD': '',
\     'STAT': '4096',
\     'IDLE': '8192',
\     'PREPARE': '16384',
\     'CHECK': '32768',
\     'EMBED': '65536',
\     'CUSTOM': '16777216',
\     'ERROR': '2147483648',
\     'BACKEND_SELECT': '1',
\     'BACKEND_POLL': '2',
\     'BACKEND_EPOLL': '4',
\     'BACKEND_KQUEUE': '8',
\     'BACKEND_DEVPOLL': '16',
\     'BACKEND_PORT': '32',
\     'BACKEND_ALL': '63',
\     'BACKEND_MASK': '65535',
\   },
\   'properties': {
\   },
\   'static_properties': {
\   },
\   'methods': {
\   },
\   'static_methods': {
\     'backend': { 'signature': 'void | int', 'return_type': 'int'},
\     'depth': { 'signature': 'void | int', 'return_type': 'int'},
\     'embeddableBackends': { 'signature': 'void | void', 'return_type': 'void'},
\     'feedSignal': { 'signature': 'int $signum | void', 'return_type': 'void'},
\     'feedSignalEvent': { 'signature': 'int $signum | void', 'return_type': 'void'},
\     'iteration': { 'signature': 'void | int', 'return_type': 'int'},
\     'now': { 'signature': 'void | double', 'return_type': 'double'},
\     'nowUpdate': { 'signature': 'void | void', 'return_type': 'void'},
\     'recommendedBackends': { 'signature': 'void | void', 'return_type': 'void'},
\     'resume': { 'signature': 'void | void', 'return_type': 'void'},
\     'run': { 'signature': '[ int $flags] | void', 'return_type': 'void'},
\     'sleep': { 'signature': 'double $seconds | void', 'return_type': 'void'},
\     'stop': { 'signature': '[ int $how] | void', 'return_type': 'void'},
\     'supportedBackends': { 'signature': 'void | void', 'return_type': 'void'},
\     'suspend': { 'signature': 'void | void', 'return_type': 'void'},
\     'time': { 'signature': 'void | double', 'return_type': 'double'},
\     'verify': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\},
\'EvCheck': {
\   'constants': {
\   },
\   'properties': {
\     'is_active': { 'initializer': '', 'type': ''},
\     'data': { 'initializer': '', 'type': ''},
\     'is_pending': { 'initializer': '', 'type': ''},
\     'priority': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     'clear': { 'signature': 'void | int', 'return_type': 'int'},
\     'feed': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'getLoop': { 'signature': 'void | EvLoop', 'return_type': 'EvLoop'},
\     'invoke': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'keepalive': { 'signature': '[ bool $value] | bool', 'return_type': 'bool'},
\     'setCallback': { 'signature': 'callable $callback | void', 'return_type': 'void'},
\     'start': { 'signature': 'void | void', 'return_type': 'void'},
\     'stop': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\     'createStopped': { 'signature': 'string $callback [, string $data [, string $priority]] | object', 'return_type': 'object'},
\   },
\},
\'EvChild': {
\   'constants': {
\   },
\   'properties': {
\     'pid': { 'initializer': '', 'type': ''},
\     'rpid': { 'initializer': '', 'type': ''},
\     'rstatus': { 'initializer': '', 'type': ''},
\     'is_active': { 'initializer': '', 'type': ''},
\     'data': { 'initializer': '', 'type': ''},
\     'is_pending': { 'initializer': '', 'type': ''},
\     'priority': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     'set': { 'signature': 'int $pid, bool $trace | void', 'return_type': 'void'},
\     'clear': { 'signature': 'void | int', 'return_type': 'int'},
\     'feed': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'getLoop': { 'signature': 'void | EvLoop', 'return_type': 'EvLoop'},
\     'invoke': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'keepalive': { 'signature': '[ bool $value] | bool', 'return_type': 'bool'},
\     'setCallback': { 'signature': 'callable $callback | void', 'return_type': 'void'},
\     'start': { 'signature': 'void | void', 'return_type': 'void'},
\     'stop': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\     'createStopped': { 'signature': 'int $pid, bool $trace, callable $callback [, mixed $data [, int $priority]] | object', 'return_type': 'object'},
\   },
\},
\'EvEmbed': {
\   'constants': {
\   },
\   'properties': {
\     'embed': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     'set': { 'signature': 'object $other | void', 'return_type': 'void'},
\     'sweep': { 'signature': 'void | void', 'return_type': 'void'},
\     'clear': { 'signature': 'void | int', 'return_type': 'int'},
\     'feed': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'getLoop': { 'signature': 'void | EvLoop', 'return_type': 'EvLoop'},
\     'invoke': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'keepalive': { 'signature': '[ bool $value] | bool', 'return_type': 'bool'},
\     'setCallback': { 'signature': 'callable $callback | void', 'return_type': 'void'},
\     'start': { 'signature': 'void | void', 'return_type': 'void'},
\     'stop': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\     'createStopped': { 'signature': 'object $other [, callable $callback [, mixed $data [, int $priority]]] | void', 'return_type': 'void'},
\   },
\},
\'EvFork': {
\   'constants': {
\   },
\   'properties': {
\     'is_active': { 'initializer': '', 'type': ''},
\     'data': { 'initializer': '', 'type': ''},
\     'is_pending': { 'initializer': '', 'type': ''},
\     'priority': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     'clear': { 'signature': 'void | int', 'return_type': 'int'},
\     'feed': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'getLoop': { 'signature': 'void | EvLoop', 'return_type': 'EvLoop'},
\     'invoke': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'keepalive': { 'signature': '[ bool $value] | bool', 'return_type': 'bool'},
\     'setCallback': { 'signature': 'callable $callback | void', 'return_type': 'void'},
\     'start': { 'signature': 'void | void', 'return_type': 'void'},
\     'stop': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\     'createStopped': { 'signature': 'string $callback [, string $data [, string $priority]] | object', 'return_type': 'object'},
\   },
\},
\'EvIdle': {
\   'constants': {
\   },
\   'properties': {
\     'is_active': { 'initializer': '', 'type': ''},
\     'data': { 'initializer': '', 'type': ''},
\     'is_pending': { 'initializer': '', 'type': ''},
\     'priority': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     'clear': { 'signature': 'void | int', 'return_type': 'int'},
\     'feed': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'getLoop': { 'signature': 'void | EvLoop', 'return_type': 'EvLoop'},
\     'invoke': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'keepalive': { 'signature': '[ bool $value] | bool', 'return_type': 'bool'},
\     'setCallback': { 'signature': 'callable $callback | void', 'return_type': 'void'},
\     'start': { 'signature': 'void | void', 'return_type': 'void'},
\     'stop': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\     'createStopped': { 'signature': 'string $callback [, mixed $data [, int $priority]] | object', 'return_type': 'object'},
\   },
\},
\'EvIo': {
\   'constants': {
\   },
\   'properties': {
\     'fd': { 'initializer': '', 'type': ''},
\     'events': { 'initializer': '', 'type': ''},
\     'is_active': { 'initializer': '', 'type': ''},
\     'data': { 'initializer': '', 'type': ''},
\     'is_pending': { 'initializer': '', 'type': ''},
\     'priority': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     'set': { 'signature': 'mixed $fd, int $events | void', 'return_type': 'void'},
\     'clear': { 'signature': 'void | int', 'return_type': 'int'},
\     'feed': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'getLoop': { 'signature': 'void | EvLoop', 'return_type': 'EvLoop'},
\     'invoke': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'keepalive': { 'signature': '[ bool $value] | bool', 'return_type': 'bool'},
\     'setCallback': { 'signature': 'callable $callback | void', 'return_type': 'void'},
\     'start': { 'signature': 'void | void', 'return_type': 'void'},
\     'stop': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\     'createStopped': { 'signature': 'mixed $fd, int $events, callable $callback [, mixed $data = NULL [, int $priority = 0]] | EvIo', 'return_type': 'EvIo'},
\   },
\},
\'EvLoop': {
\   'constants': {
\   },
\   'properties': {
\     'data': { 'initializer': '', 'type': ''},
\     'backend': { 'initializer': '', 'type': ''},
\     'is_default_loop': { 'initializer': '', 'type': ''},
\     'iteration': { 'initializer': '', 'type': ''},
\     'pending': { 'initializer': '', 'type': ''},
\     'io_interval': { 'initializer': '', 'type': ''},
\     'timeout_interval': { 'initializer': '', 'type': ''},
\     'depth': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     'backend': { 'signature': 'void | int', 'return_type': 'int'},
\     'check': { 'signature': 'string $callback [, string $data [, string $priority]] | EvCheck', 'return_type': 'EvCheck'},
\     'child': { 'signature': 'string $pid, string $trace, string $callback [, string $data [, string $priority]] | EvChild', 'return_type': 'EvChild'},
\     '__construct': { 'signature': '[ int $flags [, mixed $data = NULL [, double $io_interval = 0.0 [, double $timeout_interval = 0.0]]]]', 'return_type': ''},
\     'embed': { 'signature': 'string $other [, string $callback [, string $data [, string $priority]]] | EvEmbed', 'return_type': 'EvEmbed'},
\     'fork': { 'signature': 'callable $callback [, mixed $data = NULL [, int $priority = 0]] | EvFork', 'return_type': 'EvFork'},
\     'idle': { 'signature': 'callable $callback [, mixed $data = NULL [, int $priority = 0]] | EvIdle', 'return_type': 'EvIdle'},
\     'invokePending': { 'signature': 'void | void', 'return_type': 'void'},
\     'io': { 'signature': 'mixed $fd, int $events, callable $callback [, mixed $data = NULL [, int $priority = 0]] | EvIo', 'return_type': 'EvIo'},
\     'loopFork': { 'signature': 'void | void', 'return_type': 'void'},
\     'now': { 'signature': 'void | double', 'return_type': 'double'},
\     'nowUpdate': { 'signature': 'void | void', 'return_type': 'void'},
\     'periodic': { 'signature': 'double $offset, double $interval, callable $callback [, mixed $data = NULL [, int $priority = 0]] | EvPeriodic', 'return_type': 'EvPeriodic'},
\     'prepare': { 'signature': 'callable $callback [, mixed $data = NULL [, int $priority = 0]] | EvPrepare', 'return_type': 'EvPrepare'},
\     'resume': { 'signature': 'void | void', 'return_type': 'void'},
\     'run': { 'signature': '[ int $flags = 0] | void', 'return_type': 'void'},
\     'signal': { 'signature': 'int $signum, callable $callback [, mixed $data = NULL [, int $priority = 0]] | EvSignal', 'return_type': 'EvSignal'},
\     'stat': { 'signature': 'string $path, double $interval, callable $callback [, mixed $data = NULL [, int $priority = 0]] | EvStat', 'return_type': 'EvStat'},
\     'stop': { 'signature': '[ int $how] | void', 'return_type': 'void'},
\     'suspend': { 'signature': 'void | void', 'return_type': 'void'},
\     'timer': { 'signature': 'double $after, double $repeat, callable $callback [, mixed $data = NULL [, int $priority = 0]] | EvTimer', 'return_type': 'EvTimer'},
\     'verify': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\     'defaultLoop': { 'signature': '[ int $flags = Ev::FLAG_AUTO [, mixed $data = NULL [, double $io_interval = 0. [, double $timeout_interval = 0.]]]] | EvLoop', 'return_type': 'EvLoop'},
\   },
\},
\'EvPeriodic': {
\   'constants': {
\   },
\   'properties': {
\     'offset': { 'initializer': '', 'type': ''},
\     'interval': { 'initializer': '', 'type': ''},
\     'is_active': { 'initializer': '', 'type': ''},
\     'data': { 'initializer': '', 'type': ''},
\     'is_pending': { 'initializer': '', 'type': ''},
\     'priority': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     'again': { 'signature': 'void | void', 'return_type': 'void'},
\     'at': { 'signature': 'void | double', 'return_type': 'double'},
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     'set': { 'signature': 'double $offset, double $interval | void', 'return_type': 'void'},
\     'clear': { 'signature': 'void | int', 'return_type': 'int'},
\     'feed': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'getLoop': { 'signature': 'void | EvLoop', 'return_type': 'EvLoop'},
\     'invoke': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'keepalive': { 'signature': '[ bool $value] | bool', 'return_type': 'bool'},
\     'setCallback': { 'signature': 'callable $callback | void', 'return_type': 'void'},
\     'start': { 'signature': 'void | void', 'return_type': 'void'},
\     'stop': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\     'createStopped': { 'signature': 'double $offset, double $interval, callable $reschedule_cb, callable $callback [, mixed $data = NULL [, int $priority = 0]] | EvPeriodic', 'return_type': 'EvPeriodic'},
\   },
\},
\'EvPrepare': {
\   'constants': {
\   },
\   'properties': {
\     'is_active': { 'initializer': '', 'type': ''},
\     'data': { 'initializer': '', 'type': ''},
\     'is_pending': { 'initializer': '', 'type': ''},
\     'priority': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     'clear': { 'signature': 'void | int', 'return_type': 'int'},
\     'feed': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'getLoop': { 'signature': 'void | EvLoop', 'return_type': 'EvLoop'},
\     'invoke': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'keepalive': { 'signature': '[ bool $value] | bool', 'return_type': 'bool'},
\     'setCallback': { 'signature': 'callable $callback | void', 'return_type': 'void'},
\     'start': { 'signature': 'void | void', 'return_type': 'void'},
\     'stop': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\     'createStopped': { 'signature': 'callable $callback [, mixed $data = NULL [, int $priority = 0]] | EvPrepare', 'return_type': 'EvPrepare'},
\   },
\},
\'EvSignal': {
\   'constants': {
\   },
\   'properties': {
\     'signum': { 'initializer': '', 'type': ''},
\     'is_active': { 'initializer': '', 'type': ''},
\     'data': { 'initializer': '', 'type': ''},
\     'is_pending': { 'initializer': '', 'type': ''},
\     'priority': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     'set': { 'signature': 'int $signum | void', 'return_type': 'void'},
\     'clear': { 'signature': 'void | int', 'return_type': 'int'},
\     'feed': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'getLoop': { 'signature': 'void | EvLoop', 'return_type': 'EvLoop'},
\     'invoke': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'keepalive': { 'signature': '[ bool $value] | bool', 'return_type': 'bool'},
\     'setCallback': { 'signature': 'callable $callback | void', 'return_type': 'void'},
\     'start': { 'signature': 'void | void', 'return_type': 'void'},
\     'stop': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\     'createStopped': { 'signature': 'int $signum, callable $callback [, mixed $data = NULL [, int $priority = 0]] | EvSignal', 'return_type': 'EvSignal'},
\   },
\},
\'EvStat': {
\   'constants': {
\   },
\   'properties': {
\     'path': { 'initializer': '', 'type': ''},
\     'interval': { 'initializer': '', 'type': ''},
\     'is_active': { 'initializer': '', 'type': ''},
\     'data': { 'initializer': '', 'type': ''},
\     'is_pending': { 'initializer': '', 'type': ''},
\     'priority': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     'attr': { 'signature': 'void | array', 'return_type': 'array'},
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     'prev': { 'signature': 'void | void', 'return_type': 'void'},
\     'set': { 'signature': 'string $path, double $interval | void', 'return_type': 'void'},
\     'stat': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'clear': { 'signature': 'void | int', 'return_type': 'int'},
\     'feed': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'getLoop': { 'signature': 'void | EvLoop', 'return_type': 'EvLoop'},
\     'invoke': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'keepalive': { 'signature': '[ bool $value] | bool', 'return_type': 'bool'},
\     'setCallback': { 'signature': 'callable $callback | void', 'return_type': 'void'},
\     'start': { 'signature': 'void | void', 'return_type': 'void'},
\     'stop': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\     'createStopped': { 'signature': 'string $path, double $interval, callable $callback [, mixed $data = NULL [, int $priority = 0]] | void', 'return_type': 'void'},
\   },
\},
\'EvTimer': {
\   'constants': {
\   },
\   'properties': {
\     'repeat': { 'initializer': '', 'type': ''},
\     'remaining': { 'initializer': '', 'type': ''},
\     'is_active': { 'initializer': '', 'type': ''},
\     'data': { 'initializer': '', 'type': ''},
\     'is_pending': { 'initializer': '', 'type': ''},
\     'priority': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     'again': { 'signature': 'void | void', 'return_type': 'void'},
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     'set': { 'signature': 'double $after, double $repeat | void', 'return_type': 'void'},
\     'clear': { 'signature': 'void | int', 'return_type': 'int'},
\     'feed': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'getLoop': { 'signature': 'void | EvLoop', 'return_type': 'EvLoop'},
\     'invoke': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'keepalive': { 'signature': '[ bool $value] | bool', 'return_type': 'bool'},
\     'setCallback': { 'signature': 'callable $callback | void', 'return_type': 'void'},
\     'start': { 'signature': 'void | void', 'return_type': 'void'},
\     'stop': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\     'createStopped': { 'signature': 'double $after, double $repeat, callable $callback [, mixed $data = NULL [, int $priority = 0]] | EvTimer', 'return_type': 'EvTimer'},
\   },
\},
\'EvWatcher': {
\   'constants': {
\   },
\   'properties': {
\     'is_active': { 'initializer': '', 'type': ''},
\     'data': { 'initializer': '', 'type': ''},
\     'is_pending': { 'initializer': '', 'type': ''},
\     'priority': { 'initializer': '', 'type': ''},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     'clear': { 'signature': 'void | int', 'return_type': 'int'},
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     'feed': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'getLoop': { 'signature': 'void | EvLoop', 'return_type': 'EvLoop'},
\     'invoke': { 'signature': 'int $revents | void', 'return_type': 'void'},
\     'keepalive': { 'signature': '[ bool $value] | bool', 'return_type': 'bool'},
\     'setCallback': { 'signature': 'callable $callback | void', 'return_type': 'void'},
\     'start': { 'signature': 'void | void', 'return_type': 'void'},
\     'stop': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\   },
\},
\})
