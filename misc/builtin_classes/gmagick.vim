call extend(g:php_builtin_classes, {
\'Gmagick': {
\   'constants': {
\   },
\   'properties': {
\   },
\   'static_properties': {
\   },
\   'methods': {
\     'addimage': { 'signature': 'Gmagick $Gmagick | Gmagick', 'return_type': 'Gmagick'},
\     'addnoiseimage': { 'signature': 'int $NOISE | Gmagick', 'return_type': 'Gmagick'},
\     'annotateimage': { 'signature': 'GmagickDraw $GmagickDraw, float $x, float $y, float $angle, string $text | Gmagick', 'return_type': 'Gmagick'},
\     'blurimage': { 'signature': 'float $radius, float $sigma [, int $channel] | Gmagick', 'return_type': 'Gmagick'},
\     'borderimage': { 'signature': 'GmagickPixel $color, int $width, int $height | Gmagick', 'return_type': 'Gmagick'},
\     'charcoalimage': { 'signature': 'float $radius, float $sigma | Gmagick', 'return_type': 'Gmagick'},
\     'chopimage': { 'signature': 'int $width, int $height, int $x, int $y | Gmagick', 'return_type': 'Gmagick'},
\     'clear': { 'signature': 'void | Gmagick', 'return_type': 'Gmagick'},
\     'commentimage': { 'signature': 'string $comment | Gmagick', 'return_type': 'Gmagick'},
\     'compositeimage': { 'signature': 'Gmagick $source, int $COMPOSE, int $x, int $y | Gmagick', 'return_type': 'Gmagick'},
\     '__construct': { 'signature': '[ string $filename]', 'return_type': ''},
\     'cropimage': { 'signature': 'int $width, int $height, int $x, int $y | Gmagick', 'return_type': 'Gmagick'},
\     'cropthumbnailimage': { 'signature': 'int $width, int $height | Gmagick', 'return_type': 'Gmagick'},
\     'current': { 'signature': 'void | Gmagick', 'return_type': 'Gmagick'},
\     'cyclecolormapimage': { 'signature': 'int $displace | Gmagick', 'return_type': 'Gmagick'},
\     'deconstructimages': { 'signature': 'void | void', 'return_type': 'void'},
\     'despeckleimage': { 'signature': 'void | Gmagick', 'return_type': 'Gmagick'},
\     'destroy': { 'signature': 'void | Gmagick', 'return_type': 'Gmagick'},
\     'drawimage': { 'signature': 'GmagickDraw $GmagickDraw | Gmagick', 'return_type': 'Gmagick'},
\     'edgeimage': { 'signature': 'float $radius | Gmagick', 'return_type': 'Gmagick'},
\     'embossimage': { 'signature': 'float $radius, float $sigma | Gmagick', 'return_type': 'Gmagick'},
\     'enhanceimage': { 'signature': 'void | Gmagick', 'return_type': 'Gmagick'},
\     'equalizeimage': { 'signature': 'void | Gmagick', 'return_type': 'Gmagick'},
\     'flipimage': { 'signature': 'void | Gmagick', 'return_type': 'Gmagick'},
\     'flopimage': { 'signature': 'void | Gmagick', 'return_type': 'Gmagick'},
\     'frameimage': { 'signature': 'GmagickPixel $color, int $width, int $height, int $inner_bevel, int $outer_bevel | Gmagick', 'return_type': 'Gmagick'},
\     'gammaimage': { 'signature': 'float $gamma | Gmagick', 'return_type': 'Gmagick'},
\     'getcopyright': { 'signature': 'void | string', 'return_type': 'string'},
\     'getfilename': { 'signature': 'void | string', 'return_type': 'string'},
\     'getimagebackgroundcolor': { 'signature': 'void | void', 'return_type': 'void'},
\     'getimageblueprimary': { 'signature': 'void | array', 'return_type': 'array'},
\     'getimagebordercolor': { 'signature': 'void | void', 'return_type': 'void'},
\     'getimagechanneldepth': { 'signature': 'int $channel_type | int', 'return_type': 'int'},
\     'getimagecolors': { 'signature': 'void | int', 'return_type': 'int'},
\     'getimagecolorspace': { 'signature': 'void | int', 'return_type': 'int'},
\     'getimagecompose': { 'signature': 'void | int', 'return_type': 'int'},
\     'getimagedelay': { 'signature': 'void | int', 'return_type': 'int'},
\     'getimagedepth': { 'signature': 'void | int', 'return_type': 'int'},
\     'getimagedispose': { 'signature': 'void | int', 'return_type': 'int'},
\     'getimageextrema': { 'signature': 'void | array', 'return_type': 'array'},
\     'getimagefilename': { 'signature': 'void | string', 'return_type': 'string'},
\     'getimageformat': { 'signature': 'void | string', 'return_type': 'string'},
\     'getimagegamma': { 'signature': 'void | float', 'return_type': 'float'},
\     'getimagegreenprimary': { 'signature': 'void | array', 'return_type': 'array'},
\     'getimageheight': { 'signature': 'void | int', 'return_type': 'int'},
\     'getimagehistogram': { 'signature': 'void | array', 'return_type': 'array'},
\     'getimageindex': { 'signature': 'void | int', 'return_type': 'int'},
\     'getimageinterlacescheme': { 'signature': 'void | int', 'return_type': 'int'},
\     'getimageiterations': { 'signature': 'void | int', 'return_type': 'int'},
\     'getimagematte': { 'signature': 'void | int', 'return_type': 'int'},
\     'getimagemattecolor': { 'signature': 'void | void', 'return_type': 'void'},
\     'getimageprofile': { 'signature': 'string $name | string', 'return_type': 'string'},
\     'getimageredprimary': { 'signature': 'void | array', 'return_type': 'array'},
\     'getimagerenderingintent': { 'signature': 'void | int', 'return_type': 'int'},
\     'getimageresolution': { 'signature': 'void | array', 'return_type': 'array'},
\     'getimagescene': { 'signature': 'void | int', 'return_type': 'int'},
\     'getimagesignature': { 'signature': 'void | string', 'return_type': 'string'},
\     'getimagetype': { 'signature': 'void | int', 'return_type': 'int'},
\     'getimageunits': { 'signature': 'void | int', 'return_type': 'int'},
\     'getimagewhitepoint': { 'signature': 'void | array', 'return_type': 'array'},
\     'getimagewidth': { 'signature': 'void | int', 'return_type': 'int'},
\     'getpackagename': { 'signature': 'void | string', 'return_type': 'string'},
\     'getquantumdepth': { 'signature': 'void | array', 'return_type': 'array'},
\     'getreleasedate': { 'signature': 'void | string', 'return_type': 'string'},
\     'getsamplingfactors': { 'signature': 'void | array', 'return_type': 'array'},
\     'getsize': { 'signature': 'void | array', 'return_type': 'array'},
\     'getversion': { 'signature': 'void | array', 'return_type': 'array'},
\     'hasnextimage': { 'signature': 'void | mixed', 'return_type': 'mixed'},
\     'haspreviousimage': { 'signature': 'void | mixed', 'return_type': 'mixed'},
\     'implodeimage': { 'signature': 'float $radius | mixed', 'return_type': 'mixed'},
\     'labelimage': { 'signature': 'string $label | mixed', 'return_type': 'mixed'},
\     'levelimage': { 'signature': 'float $blackPoint, float $gamma, float $whitePoint [, int $channel = Gmagick::CHANNEL_DEFAULT] | mixed', 'return_type': 'mixed'},
\     'magnifyimage': { 'signature': 'void | mixed', 'return_type': 'mixed'},
\     'mapimage': { 'signature': 'gmagick $gmagick, bool $dither | Gmagick', 'return_type': 'Gmagick'},
\     'medianfilterimage': { 'signature': 'float $radius | void', 'return_type': 'void'},
\     'minifyimage': { 'signature': 'void | void', 'return_type': 'void'},
\     'modulateimage': { 'signature': 'float $brightness, float $saturation, float $hue | void', 'return_type': 'void'},
\     'motionblurimage': { 'signature': 'float $radius, float $sigma, float $angle | void', 'return_type': 'void'},
\     'newimage': { 'signature': 'int $width, int $height, string $background [, string $format] | void', 'return_type': 'void'},
\     'nextimage': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'normalizeimage': { 'signature': '[ int $channel] | void', 'return_type': 'void'},
\     'oilpaintimage': { 'signature': 'float $radius | void', 'return_type': 'void'},
\     'previousimage': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'profileimage': { 'signature': 'string $name, string $profile | void', 'return_type': 'void'},
\     'quantizeimage': { 'signature': 'int $numColors, int $colorspace, int $treeDepth, bool $dither, bool $measureError | void', 'return_type': 'void'},
\     'quantizeimages': { 'signature': 'int $numColors, int $colorspace, int $treeDepth, bool $dither, bool $measureError | void', 'return_type': 'void'},
\     'queryfontmetrics': { 'signature': 'GmagickDraw $draw, string $text | array', 'return_type': 'array'},
\     'queryfonts': { 'signature': '[ string $pattern = "*"] | array', 'return_type': 'array'},
\     'queryformats': { 'signature': '[ string $pattern = "*"] | array', 'return_type': 'array'},
\     'radialblurimage': { 'signature': 'float $angle [, int $channel = Gmagick::CHANNEL_DEFAULT] | void', 'return_type': 'void'},
\     'raiseimage': { 'signature': 'int $width, int $height, int $x, int $y, bool $raise | void', 'return_type': 'void'},
\     'read': { 'signature': 'string $filename | void', 'return_type': 'void'},
\     'readimage': { 'signature': 'string $filename | void', 'return_type': 'void'},
\     'readimageblob': { 'signature': 'string $imageContents [, string $filename] | void', 'return_type': 'void'},
\     'readimagefile': { 'signature': 'resource $fp [, string $filename] | void', 'return_type': 'void'},
\     'reducenoiseimage': { 'signature': 'float $radius | void', 'return_type': 'void'},
\     'removeimage': { 'signature': 'void | void', 'return_type': 'void'},
\     'removeimageprofile': { 'signature': 'string $name | string', 'return_type': 'string'},
\     'resampleimage': { 'signature': 'float $xResolution, float $yResolution, int $filter, float $blur | void', 'return_type': 'void'},
\     'resizeimage': { 'signature': 'int $width, int $height, int $filter, float $blur [, bool $fit = false] | void', 'return_type': 'void'},
\     'rollimage': { 'signature': 'int $x, int $y | void', 'return_type': 'void'},
\     'rotateimage': { 'signature': 'mixed $color, float $degrees | Gmagick', 'return_type': 'Gmagick'},
\     'scaleimage': { 'signature': 'int $width, int $height [, bool $fit = false] | Gmagick', 'return_type': 'Gmagick'},
\     'separateimagechannel': { 'signature': 'int $channel | Gmagick', 'return_type': 'Gmagick'},
\     'setfilename': { 'signature': 'string $filename | Gmagick', 'return_type': 'Gmagick'},
\     'setimagebackgroundcolor': { 'signature': 'GmagickPixel $color | Gmagick', 'return_type': 'Gmagick'},
\     'setimageblueprimary': { 'signature': 'float $x, float $y | Gmagick', 'return_type': 'Gmagick'},
\     'setimagebordercolor': { 'signature': 'GmagickPixel $color | Gmagick', 'return_type': 'Gmagick'},
\     'setimagechanneldepth': { 'signature': 'int $channel, int $depth | Gmagick', 'return_type': 'Gmagick'},
\     'setimagecolorspace': { 'signature': 'int $colorspace | Gmagick', 'return_type': 'Gmagick'},
\     'setimagecompose': { 'signature': 'int $composite | Gmagick', 'return_type': 'Gmagick'},
\     'setimagedelay': { 'signature': 'int $delay | Gmagick', 'return_type': 'Gmagick'},
\     'setimagedepth': { 'signature': 'int $depth | Gmagick', 'return_type': 'Gmagick'},
\     'setimagedispose': { 'signature': 'int $disposeType | Gmagick', 'return_type': 'Gmagick'},
\     'setimagefilename': { 'signature': 'string $filename | Gmagick', 'return_type': 'Gmagick'},
\     'setimageformat': { 'signature': 'string $imageFormat | Gmagick', 'return_type': 'Gmagick'},
\     'setimagegamma': { 'signature': 'float $gamma | Gmagick', 'return_type': 'Gmagick'},
\     'setimagegreenprimary': { 'signature': 'float $x, float $y | Gmagick', 'return_type': 'Gmagick'},
\     'setimageindex': { 'signature': 'int $index | Gmagick', 'return_type': 'Gmagick'},
\     'setimageinterlacescheme': { 'signature': 'int $interlace | Gmagick', 'return_type': 'Gmagick'},
\     'setimageiterations': { 'signature': 'int $iterations | Gmagick', 'return_type': 'Gmagick'},
\     'setimageprofile': { 'signature': 'string $name, string $profile | Gmagick', 'return_type': 'Gmagick'},
\     'setimageredprimary': { 'signature': 'float $x, float $y | Gmagick', 'return_type': 'Gmagick'},
\     'setimagerenderingintent': { 'signature': 'int $rendering_intent | Gmagick', 'return_type': 'Gmagick'},
\     'setimageresolution': { 'signature': 'float $xResolution, float $yResolution | Gmagick', 'return_type': 'Gmagick'},
\     'setimagescene': { 'signature': 'int $scene | Gmagick', 'return_type': 'Gmagick'},
\     'setimagetype': { 'signature': 'int $imgType | Gmagick', 'return_type': 'Gmagick'},
\     'setimageunits': { 'signature': 'int $resolution | Gmagick', 'return_type': 'Gmagick'},
\     'setimagewhitepoint': { 'signature': 'float $x, float $y | Gmagick', 'return_type': 'Gmagick'},
\     'setsamplingfactors': { 'signature': 'array $factors | Gmagick', 'return_type': 'Gmagick'},
\     'setsize': { 'signature': 'int $columns, int $rows | Gmagick', 'return_type': 'Gmagick'},
\     'shearimage': { 'signature': 'mixed $color, float $xShear, float $yShear | Gmagick', 'return_type': 'Gmagick'},
\     'solarizeimage': { 'signature': 'int $threshold | Gmagick', 'return_type': 'Gmagick'},
\     'spreadimage': { 'signature': 'float $radius | Gmagick', 'return_type': 'Gmagick'},
\     'stripimage': { 'signature': 'void | Gmagick', 'return_type': 'Gmagick'},
\     'swirlimage': { 'signature': 'float $degrees | Gmagick', 'return_type': 'Gmagick'},
\     'thumbnailimage': { 'signature': 'int $width, int $height [, bool $fit = false] | Gmagick', 'return_type': 'Gmagick'},
\     'trimimage': { 'signature': 'float $fuzz | Gmagick', 'return_type': 'Gmagick'},
\     'write': { 'signature': 'string $filename | void', 'return_type': 'void'},
\     'writeimage': { 'signature': 'string $filename [, bool $all_frames = false] | Gmagick', 'return_type': 'Gmagick'},
\   },
\   'static_methods': {
\   },
\},
\'GmagickDraw': {
\   'constants': {
\   },
\   'properties': {
\   },
\   'static_properties': {
\   },
\   'methods': {
\     'annotate': { 'signature': 'float $x, float $y, string $text | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'arc': { 'signature': 'float $sx, float $sy, float $ex, float $ey, float $sd, float $ed | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'bezier': { 'signature': 'array $coordinate_array | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'ellipse': { 'signature': 'float $ox, float $oy, float $rx, float $ry, float $start, float $end | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'getfillcolor': { 'signature': 'void | void', 'return_type': 'void'},
\     'getfillopacity': { 'signature': 'void | float', 'return_type': 'float'},
\     'getfont': { 'signature': 'void | string', 'return_type': 'string'},
\     'getfontsize': { 'signature': 'void | float', 'return_type': 'float'},
\     'getfontstyle': { 'signature': 'void | int', 'return_type': 'int'},
\     'getfontweight': { 'signature': 'void | int', 'return_type': 'int'},
\     'getstrokecolor': { 'signature': 'void | void', 'return_type': 'void'},
\     'getstrokeopacity': { 'signature': 'void | float', 'return_type': 'float'},
\     'getstrokewidth': { 'signature': 'void | float', 'return_type': 'float'},
\     'gettextdecoration': { 'signature': 'void | int', 'return_type': 'int'},
\     'gettextencoding': { 'signature': 'void | string', 'return_type': 'string'},
\     'line': { 'signature': 'float $sx, float $sy, float $ex, float $ey | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'point': { 'signature': 'float $x, float $y | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'polygon': { 'signature': 'array $coordinates | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'polyline': { 'signature': 'array $coordinate_array | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'rectangle': { 'signature': 'float $x1, float $y1, float $x2, float $y2 | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'rotate': { 'signature': 'float $degrees | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'roundrectangle': { 'signature': 'float $x1, float $y1, float $x2, float $y2, float $rx, float $ry | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'scale': { 'signature': 'float $x, float $y | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'setfillcolor': { 'signature': 'string $color | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'setfillopacity': { 'signature': 'float $fill_opacity | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'setfont': { 'signature': 'string $font | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'setfontsize': { 'signature': 'float $pointsize | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'setfontstyle': { 'signature': 'int $style | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'setfontweight': { 'signature': 'int $weight | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'setstrokecolor': { 'signature': 'GmagickPixel $color | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'setstrokeopacity': { 'signature': 'float $stroke_opacity | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'setstrokewidth': { 'signature': 'float $width | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'settextdecoration': { 'signature': 'int $decoration | GmagickDraw', 'return_type': 'GmagickDraw'},
\     'settextencoding': { 'signature': 'string $encoding | GmagickDraw', 'return_type': 'GmagickDraw'},
\   },
\   'static_methods': {
\   },
\},
\'GmagickPixel': {
\   'constants': {
\   },
\   'properties': {
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': '[ string $color]', 'return_type': ''},
\     'getcolor': { 'signature': '[ bool $as_array [, bool $normalize_array]] | mixed', 'return_type': 'mixed'},
\     'getcolorcount': { 'signature': 'void | int', 'return_type': 'int'},
\     'getcolorvalue': { 'signature': 'int $color | float', 'return_type': 'float'},
\     'setcolor': { 'signature': 'string $color | GmagickPixel', 'return_type': 'GmagickPixel'},
\     'setcolorvalue': { 'signature': 'int $color, float $value | GmagickPixel', 'return_type': 'GmagickPixel'},
\   },
\   'static_methods': {
\   },
\},
\})
