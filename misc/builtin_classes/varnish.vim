call extend(g:php_builtin_classes, {
\'VarnishAdmin': {
\   'constants': {
\   },
\   'properties': {
\   },
\   'static_properties': {
\   },
\   'methods': {
\     'auth': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'ban': { 'signature': 'string $vcl_regex | int', 'return_type': 'int'},
\     'banUrl': { 'signature': 'string $vcl_regex | int', 'return_type': 'int'},
\     'clearPanic': { 'signature': 'void | int', 'return_type': 'int'},
\     'connect': { 'signature': 'void | bool', 'return_type': 'bool'},
\     '__construct': { 'signature': '[ array $args]', 'return_type': ''},
\     'disconnect': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'getPanic': { 'signature': 'void | string', 'return_type': 'string'},
\     'getParams': { 'signature': 'void | array', 'return_type': 'array'},
\     'isRunning': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'setCompat': { 'signature': 'int $compat | void', 'return_type': 'void'},
\     'setHost': { 'signature': 'string $host | void', 'return_type': 'void'},
\     'setIdent': { 'signature': 'string $ident | void', 'return_type': 'void'},
\     'setParam': { 'signature': 'string $name, string|integer $value | int', 'return_type': 'int'},
\     'setPort': { 'signature': 'int $port | void', 'return_type': 'void'},
\     'setSecret': { 'signature': 'string $secret | void', 'return_type': 'void'},
\     'setTimeout': { 'signature': 'int $timeout | void', 'return_type': 'void'},
\     'start': { 'signature': 'void | int', 'return_type': 'int'},
\     'stop': { 'signature': 'void | int', 'return_type': 'int'},
\   },
\   'static_methods': {
\   },
\},
\'VarnishLog': {
\   'constants': {
\     'TAG_Debug': '0',
\     'TAG_Error': '1',
\     'TAG_CLI': '2',
\     'TAG_StatSess': '3',
\     'TAG_ReqEnd': '4',
\     'TAG_SessionOpen': '5',
\     'TAG_SessionClose': '6',
\     'TAG_BackendOpen': '7',
\     'TAG_BackendXID': '8',
\     'TAG_BackendReuse': '9',
\     'TAG_BackendClose': '10',
\     'TAG_HttpGarbage': '11',
\     'TAG_Backend': '12',
\     'TAG_Length': '13',
\     'TAG_FetchError': '14',
\     'TAG_RxRequest': '15',
\     'TAG_RxResponse': '16',
\     'TAG_RxStatus': '17',
\     'TAG_RxURL': '18',
\     'TAG_RxProtocol': '19',
\     'TAG_RxHeader': '20',
\     'TAG_TxRequest': '21',
\     'TAG_TxResponse': '22',
\     'TAG_TxStatus': '23',
\     'TAG_TxURL': '24',
\     'TAG_TxProtocol': '25',
\     'TAG_TxHeader': '26',
\     'TAG_ObjRequest': '27',
\     'TAG_ObjResponse': '28',
\     'TAG_ObjStatus': '29',
\     'TAG_ObjURL': '30',
\     'TAG_ObjProtocol': '31',
\     'TAG_ObjHeader': '32',
\     'TAG_LostHeader': '33',
\     'TAG_TTL': '34',
\     'TAG_Fetch_Body': '35',
\     'TAG_VCL_acl': '36',
\     'TAG_VCL_call': '37',
\     'TAG_VCL_trace': '38',
\     'TAG_VCL_return': '39',
\     'TAG_VCL_error': '40',
\     'TAG_ReqStart': '41',
\     'TAG_Hit': '42',
\     'TAG_HitPass': '43',
\     'TAG_ExpBan': '44',
\     'TAG_ExpKill': '45',
\     'TAG_WorkThread': '46',
\     'TAG_ESI_xmlerror': '47',
\     'TAG_Hash': '48',
\     'TAG_Backend_health': '49',
\     'TAG_VCL_Log': '50',
\     'TAG_Gzip': '51',
\   },
\   'properties': {
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': '[ array $args]', 'return_type': ''},
\     'getLine': { 'signature': 'void | array', 'return_type': 'array'},
\   },
\   'static_methods': {
\     'getTagName': { 'signature': 'int $index | string', 'return_type': 'string'},
\   },
\},
\'VarnishStat': {
\   'constants': {
\   },
\   'properties': {
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': '[ array $args]', 'return_type': ''},
\     'getSnapshot': { 'signature': 'void | array', 'return_type': 'array'},
\   },
\   'static_methods': {
\   },
\},
\})
