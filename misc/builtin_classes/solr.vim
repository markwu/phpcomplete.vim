call extend(g:php_builtin_classes, {
\'SolrClient': {
\   'constants': {
\     'SEARCH_SERVLET_TYPE': '1',
\     'UPDATE_SERVLET_TYPE': '2',
\     'THREADS_SERVLET_TYPE': '4',
\     'PING_SERVLET_TYPE': '8',
\     'TERMS_SERVLET_TYPE': '16',
\     'DEFAULT_SEARCH_SERVLET': 'select',
\     'DEFAULT_UPDATE_SERVLET': 'update',
\     'DEFAULT_THREADS_SERVLET': 'admin/threads',
\     'DEFAULT_PING_SERVLET': 'admin/ping',
\     'DEFAULT_TERMS_SERVLET': 'terms',
\   },
\   'properties': {
\   },
\   'static_properties': {
\   },
\   'methods': {
\     'addDocument': { 'signature': 'SolrInputDocument $doc [, bool $allowDups = false [, int $commitWithin = 0]] | SolrUpdateResponse', 'return_type': 'SolrUpdateResponse'},
\     'addDocuments': { 'signature': 'array $docs [, bool $allowDups = false [, int $commitWithin = 0]] | void', 'return_type': 'void'},
\     'commit': { 'signature': '[ int $maxSegments = "1" [, bool $waitFlush = true [, bool $waitSearcher = true]]] | SolrUpdateResponse', 'return_type': 'SolrUpdateResponse'},
\     '__construct': { 'signature': 'array $clientOptions', 'return_type': ''},
\     'deleteById': { 'signature': 'string $id | SolrUpdateResponse', 'return_type': 'SolrUpdateResponse'},
\     'deleteByIds': { 'signature': 'array $ids | SolrUpdateResponse', 'return_type': 'SolrUpdateResponse'},
\     'deleteByQueries': { 'signature': 'array $queries | SolrUpdateResponse', 'return_type': 'SolrUpdateResponse'},
\     'deleteByQuery': { 'signature': 'string $query | SolrUpdateResponse', 'return_type': 'SolrUpdateResponse'},
\     '__destruct': { 'signature': 'void | void', 'return_type': 'void'},
\     'getDebug': { 'signature': 'void | string', 'return_type': 'string'},
\     'getOptions': { 'signature': 'void | array', 'return_type': 'array'},
\     'optimize': { 'signature': '[ int $maxSegments = "1" [, bool $waitFlush = true [, bool $waitSearcher = true]]] | SolrUpdateResponse', 'return_type': 'SolrUpdateResponse'},
\     'ping': { 'signature': 'void | SolrPingResponse', 'return_type': 'SolrPingResponse'},
\     'query': { 'signature': 'SolrParams $query | SolrQueryResponse', 'return_type': 'SolrQueryResponse'},
\     'request': { 'signature': 'string $raw_request | void', 'return_type': 'void'},
\     'rollback': { 'signature': 'void | SolrUpdateResponse', 'return_type': 'SolrUpdateResponse'},
\     'setResponseWriter': { 'signature': 'string $responseWriter | void', 'return_type': 'void'},
\     'setServlet': { 'signature': 'int $type, string $value | bool', 'return_type': 'bool'},
\     'threads': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\   },
\},
\'SolrClientException': {
\   'constants': {
\   },
\   'properties': {
\     'message': { 'initializer': '', 'type': 'string'},
\     'code': { 'initializer': '', 'type': 'int'},
\     'file': { 'initializer': '', 'type': 'string'},
\     'line': { 'initializer': '', 'type': 'int'},
\     'sourceline': { 'initializer': '', 'type': 'integer'},
\     'sourcefile': { 'initializer': '', 'type': 'string'},
\     'zif_name': { 'initializer': '', 'type': 'string'},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     'getInternalInfo': { 'signature': 'void | array', 'return_type': 'array'},
\     'getMessage': { 'signature': 'void | string', 'return_type': 'string'},
\     'getPrevious': { 'signature': 'void | Exception', 'return_type': 'Exception'},
\     'getCode': { 'signature': 'void | mixed', 'return_type': 'mixed'},
\     'getFile': { 'signature': 'void | string', 'return_type': 'string'},
\     'getLine': { 'signature': 'void | int', 'return_type': 'int'},
\     'getTrace': { 'signature': 'void | array', 'return_type': 'array'},
\     'getTraceAsString': { 'signature': 'void | string', 'return_type': 'string'},
\     '__toString': { 'signature': 'void | string', 'return_type': 'string'},
\     '__clone': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\   },
\},
\'SolrDocument': {
\   'constants': {
\     'SORT_DEFAULT': '1',
\     'SORT_ASC': '1',
\     'SORT_DESC': '2',
\     'SORT_FIELD_NAME': '1',
\     'SORT_FIELD_VALUE_COUNT': '2',
\     'SORT_FIELD_BOOST_VALUE': '4',
\   },
\   'properties': {
\   },
\   'static_properties': {
\   },
\   'methods': {
\     'addField': { 'signature': 'string $fieldName, string $fieldValue | bool', 'return_type': 'bool'},
\     'clear': { 'signature': 'void | bool', 'return_type': 'bool'},
\     '__clone': { 'signature': 'void | void', 'return_type': 'void'},
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     'current': { 'signature': 'void | SolrDocumentField', 'return_type': 'SolrDocumentField'},
\     'deleteField': { 'signature': 'string $fieldName | bool', 'return_type': 'bool'},
\     '__destruct': { 'signature': 'void | void', 'return_type': 'void'},
\     'fieldExists': { 'signature': 'string $fieldName | bool', 'return_type': 'bool'},
\     '__get': { 'signature': 'string $fieldName | SolrDocumentField', 'return_type': 'SolrDocumentField'},
\     'getField': { 'signature': 'string $fieldName | SolrDocumentField', 'return_type': 'SolrDocumentField'},
\     'getFieldCount': { 'signature': 'void | int', 'return_type': 'int'},
\     'getFieldNames': { 'signature': 'void | array', 'return_type': 'array'},
\     'getInputDocument': { 'signature': 'void | SolrInputDocument', 'return_type': 'SolrInputDocument'},
\     '__isset': { 'signature': 'string $fieldName | bool', 'return_type': 'bool'},
\     'key': { 'signature': 'void | string', 'return_type': 'string'},
\     'merge': { 'signature': 'SolrDocument $sourceDoc [, bool $overwrite = true] | bool', 'return_type': 'bool'},
\     'next': { 'signature': 'void | void', 'return_type': 'void'},
\     'offsetExists': { 'signature': 'string $fieldName | bool', 'return_type': 'bool'},
\     'offsetGet': { 'signature': 'string $fieldName | SolrDocumentField', 'return_type': 'SolrDocumentField'},
\     'offsetSet': { 'signature': 'string $fieldName, string $fieldValue | void', 'return_type': 'void'},
\     'offsetUnset': { 'signature': 'string $fieldName | void', 'return_type': 'void'},
\     'reset': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'rewind': { 'signature': 'void | void', 'return_type': 'void'},
\     'serialize': { 'signature': 'void | string', 'return_type': 'string'},
\     '__set': { 'signature': 'string $fieldName, string $fieldValue | bool', 'return_type': 'bool'},
\     'sort': { 'signature': 'int $sortOrderBy [, int $sortDirection = SolrDocument::SORT_ASC] | bool', 'return_type': 'bool'},
\     'toArray': { 'signature': 'void | array', 'return_type': 'array'},
\     'unserialize': { 'signature': 'string $serialized | void', 'return_type': 'void'},
\     '__unset': { 'signature': 'string $fieldName | bool', 'return_type': 'bool'},
\     'valid': { 'signature': 'void | bool', 'return_type': 'bool'},
\   },
\   'static_methods': {
\   },
\},
\'SolrDocumentField': {
\   'constants': {
\   },
\   'properties': {
\     'name': { 'initializer': '', 'type': 'string'},
\     'boost': { 'initializer': '', 'type': 'float'},
\     'values': { 'initializer': '', 'type': 'array'},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     '__destruct': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\   },
\},
\'SolrException': {
\   'constants': {
\   },
\   'properties': {
\     'sourceline': { 'initializer': '', 'type': 'integer'},
\     'sourcefile': { 'initializer': '', 'type': 'string'},
\     'zif_name': { 'initializer': '', 'type': 'string'},
\     'message': { 'initializer': '', 'type': 'string'},
\     'code': { 'initializer': '', 'type': 'int'},
\     'file': { 'initializer': '', 'type': 'string'},
\     'line': { 'initializer': '', 'type': 'int'},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     'getInternalInfo': { 'signature': 'void | array', 'return_type': 'array'},
\     'getMessage': { 'signature': 'void | string', 'return_type': 'string'},
\     'getPrevious': { 'signature': 'void | Exception', 'return_type': 'Exception'},
\     'getCode': { 'signature': 'void | mixed', 'return_type': 'mixed'},
\     'getFile': { 'signature': 'void | string', 'return_type': 'string'},
\     'getLine': { 'signature': 'void | int', 'return_type': 'int'},
\     'getTrace': { 'signature': 'void | array', 'return_type': 'array'},
\     'getTraceAsString': { 'signature': 'void | string', 'return_type': 'string'},
\     '__toString': { 'signature': 'void | string', 'return_type': 'string'},
\     '__clone': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\   },
\},
\'SolrGenericResponse': {
\   'constants': {
\     'PARSE_SOLR_OBJ': '0',
\     'PARSE_SOLR_DOC': '1',
\     'SolrResponse::PARSE_SOLR_OBJ': '0',
\     'SolrResponse::PARSE_SOLR_DOC': '1',
\   },
\   'properties': {
\     'http_status': { 'initializer': '', 'type': 'integer'},
\     'parser_mode': { 'initializer': '', 'type': 'integer'},
\     'success': { 'initializer': '', 'type': 'bool'},
\     'http_status_message': { 'initializer': '', 'type': 'string'},
\     'http_request_url': { 'initializer': '', 'type': 'string'},
\     'http_raw_request_headers': { 'initializer': '', 'type': 'string'},
\     'http_raw_request': { 'initializer': '', 'type': 'string'},
\     'http_raw_response_headers': { 'initializer': '', 'type': 'string'},
\     'http_raw_response': { 'initializer': '', 'type': 'string'},
\     'http_digested_response': { 'initializer': '', 'type': 'string'},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     '__destruct': { 'signature': 'void | void', 'return_type': 'void'},
\     'getDigestedResponse': { 'signature': 'void | string', 'return_type': 'string'},
\     'getHttpStatus': { 'signature': 'void | int', 'return_type': 'int'},
\     'getHttpStatusMessage': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRawRequest': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRawRequestHeaders': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRawResponse': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRawResponseHeaders': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRequestUrl': { 'signature': 'void | string', 'return_type': 'string'},
\     'getResponse': { 'signature': 'void | SolrObject', 'return_type': 'SolrObject'},
\     'setParseMode': { 'signature': '[ int $parser_mode = 0] | bool', 'return_type': 'bool'},
\     'success': { 'signature': 'void | bool', 'return_type': 'bool'},
\   },
\   'static_methods': {
\   },
\},
\'SolrIllegalArgumentException': {
\   'constants': {
\   },
\   'properties': {
\     'message': { 'initializer': '', 'type': 'string'},
\     'code': { 'initializer': '', 'type': 'int'},
\     'file': { 'initializer': '', 'type': 'string'},
\     'line': { 'initializer': '', 'type': 'int'},
\     'sourceline': { 'initializer': '', 'type': 'integer'},
\     'sourcefile': { 'initializer': '', 'type': 'string'},
\     'zif_name': { 'initializer': '', 'type': 'string'},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     'getInternalInfo': { 'signature': 'void | array', 'return_type': 'array'},
\     'getMessage': { 'signature': 'void | string', 'return_type': 'string'},
\     'getPrevious': { 'signature': 'void | Exception', 'return_type': 'Exception'},
\     'getCode': { 'signature': 'void | mixed', 'return_type': 'mixed'},
\     'getFile': { 'signature': 'void | string', 'return_type': 'string'},
\     'getLine': { 'signature': 'void | int', 'return_type': 'int'},
\     'getTrace': { 'signature': 'void | array', 'return_type': 'array'},
\     'getTraceAsString': { 'signature': 'void | string', 'return_type': 'string'},
\     '__toString': { 'signature': 'void | string', 'return_type': 'string'},
\     '__clone': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\   },
\},
\'SolrIllegalOperationException': {
\   'constants': {
\   },
\   'properties': {
\     'message': { 'initializer': '', 'type': 'string'},
\     'code': { 'initializer': '', 'type': 'int'},
\     'file': { 'initializer': '', 'type': 'string'},
\     'line': { 'initializer': '', 'type': 'int'},
\     'sourceline': { 'initializer': '', 'type': 'integer'},
\     'sourcefile': { 'initializer': '', 'type': 'string'},
\     'zif_name': { 'initializer': '', 'type': 'string'},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     'getInternalInfo': { 'signature': 'void | array', 'return_type': 'array'},
\     'getMessage': { 'signature': 'void | string', 'return_type': 'string'},
\     'getPrevious': { 'signature': 'void | Exception', 'return_type': 'Exception'},
\     'getCode': { 'signature': 'void | mixed', 'return_type': 'mixed'},
\     'getFile': { 'signature': 'void | string', 'return_type': 'string'},
\     'getLine': { 'signature': 'void | int', 'return_type': 'int'},
\     'getTrace': { 'signature': 'void | array', 'return_type': 'array'},
\     'getTraceAsString': { 'signature': 'void | string', 'return_type': 'string'},
\     '__toString': { 'signature': 'void | string', 'return_type': 'string'},
\     '__clone': { 'signature': 'void | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\   },
\},
\'SolrInputDocument': {
\   'constants': {
\     'SORT_DEFAULT': '1',
\     'SORT_ASC': '1',
\     'SORT_DESC': '2',
\     'SORT_FIELD_NAME': '1',
\     'SORT_FIELD_VALUE_COUNT': '2',
\     'SORT_FIELD_BOOST_VALUE': '4',
\   },
\   'properties': {
\   },
\   'static_properties': {
\   },
\   'methods': {
\     'addField': { 'signature': 'string $fieldName, string $fieldValue [, float $fieldBoostValue = 0.0] | bool', 'return_type': 'bool'},
\     'clear': { 'signature': 'void | bool', 'return_type': 'bool'},
\     '__clone': { 'signature': 'void | void', 'return_type': 'void'},
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     'deleteField': { 'signature': 'string $fieldName | bool', 'return_type': 'bool'},
\     '__destruct': { 'signature': 'void | void', 'return_type': 'void'},
\     'fieldExists': { 'signature': 'string $fieldName | bool', 'return_type': 'bool'},
\     'getBoost': { 'signature': 'void | float', 'return_type': 'float'},
\     'getField': { 'signature': 'string $fieldName | SolrDocumentField', 'return_type': 'SolrDocumentField'},
\     'getFieldBoost': { 'signature': 'string $fieldName | float', 'return_type': 'float'},
\     'getFieldCount': { 'signature': 'void | int', 'return_type': 'int'},
\     'getFieldNames': { 'signature': 'void | array', 'return_type': 'array'},
\     'merge': { 'signature': 'SolrInputDocument $sourceDoc [, bool $overwrite = true] | bool', 'return_type': 'bool'},
\     'reset': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'setBoost': { 'signature': 'float $documentBoostValue | bool', 'return_type': 'bool'},
\     'setFieldBoost': { 'signature': 'string $fieldName, float $fieldBoostValue | bool', 'return_type': 'bool'},
\     'sort': { 'signature': 'int $sortOrderBy [, int $sortDirection = SolrInputDocument::SORT_ASC] | bool', 'return_type': 'bool'},
\     'toArray': { 'signature': 'void | array', 'return_type': 'array'},
\   },
\   'static_methods': {
\   },
\},
\'SolrModifiableParams': {
\   'constants': {
\   },
\   'properties': {
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     '__destruct': { 'signature': 'void | void', 'return_type': 'void'},
\     'add': { 'signature': 'string $name, string $value | SolrParams', 'return_type': 'SolrParams'},
\     'addParam': { 'signature': 'string $name, string $value | SolrParams', 'return_type': 'SolrParams'},
\     'get': { 'signature': 'string $param_name | mixed', 'return_type': 'mixed'},
\     'getParam': { 'signature': '[ string $param_name] | mixed', 'return_type': 'mixed'},
\     'getParams': { 'signature': 'void | array', 'return_type': 'array'},
\     'getPreparedParams': { 'signature': 'void | array', 'return_type': 'array'},
\     'serialize': { 'signature': 'void | string', 'return_type': 'string'},
\     'set': { 'signature': 'string $name, string $value | void', 'return_type': 'void'},
\     'setParam': { 'signature': 'string $name, string $value | SolrParams', 'return_type': 'SolrParams'},
\     'toString': { 'signature': '[ bool $url_encode = false] | string', 'return_type': 'string'},
\     'unserialize': { 'signature': 'string $serialized | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\   },
\},
\'SolrObject': {
\   'constants': {
\   },
\   'properties': {
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     '__destruct': { 'signature': 'void | void', 'return_type': 'void'},
\     'getPropertyNames': { 'signature': 'void | array', 'return_type': 'array'},
\     'offsetExists': { 'signature': 'string $property_name | bool', 'return_type': 'bool'},
\     'offsetGet': { 'signature': 'string $property_name | mixed', 'return_type': 'mixed'},
\     'offsetSet': { 'signature': 'string $property_name, string $property_value | void', 'return_type': 'void'},
\     'offsetUnset': { 'signature': 'string $property_name | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\   },
\},
\'SolrParams': {
\   'constants': {
\   },
\   'properties': {
\   },
\   'static_properties': {
\   },
\   'methods': {
\     'add': { 'signature': 'string $name, string $value | SolrParams', 'return_type': 'SolrParams'},
\     'addParam': { 'signature': 'string $name, string $value | SolrParams', 'return_type': 'SolrParams'},
\     'get': { 'signature': 'string $param_name | mixed', 'return_type': 'mixed'},
\     'getParam': { 'signature': '[ string $param_name] | mixed', 'return_type': 'mixed'},
\     'getParams': { 'signature': 'void | array', 'return_type': 'array'},
\     'getPreparedParams': { 'signature': 'void | array', 'return_type': 'array'},
\     'serialize': { 'signature': 'void | string', 'return_type': 'string'},
\     'set': { 'signature': 'string $name, string $value | void', 'return_type': 'void'},
\     'setParam': { 'signature': 'string $name, string $value | SolrParams', 'return_type': 'SolrParams'},
\     'toString': { 'signature': '[ bool $url_encode = false] | string', 'return_type': 'string'},
\     'unserialize': { 'signature': 'string $serialized | void', 'return_type': 'void'},
\   },
\   'static_methods': {
\   },
\},
\'SolrPingResponse': {
\   'constants': {
\     'PARSE_SOLR_OBJ': '0',
\     'PARSE_SOLR_DOC': '1',
\   },
\   'properties': {
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     '__destruct': { 'signature': 'void | void', 'return_type': 'void'},
\     'getResponse': { 'signature': 'void | SolrObject', 'return_type': 'SolrObject'},
\     'getDigestedResponse': { 'signature': 'void | string', 'return_type': 'string'},
\     'getHttpStatus': { 'signature': 'void | int', 'return_type': 'int'},
\     'getHttpStatusMessage': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRawRequest': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRawRequestHeaders': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRawResponse': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRawResponseHeaders': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRequestUrl': { 'signature': 'void | string', 'return_type': 'string'},
\     'setParseMode': { 'signature': '[ int $parser_mode = 0] | bool', 'return_type': 'bool'},
\     'success': { 'signature': 'void | bool', 'return_type': 'bool'},
\   },
\   'static_methods': {
\   },
\},
\'SolrQuery': {
\   'constants': {
\     'ORDER_ASC': '0',
\     'ORDER_DESC': '1',
\     'FACET_SORT_INDEX': '0',
\     'FACET_SORT_COUNT': '1',
\     'TERMS_SORT_INDEX': '0',
\     'TERMS_SORT_COUNT': '1',
\   },
\   'properties': {
\   },
\   'static_properties': {
\   },
\   'methods': {
\     'addFacetDateField': { 'signature': 'string $dateField | SolrQuery', 'return_type': 'SolrQuery'},
\     'addFacetDateOther': { 'signature': 'string $value [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'addFacetField': { 'signature': 'string $field | SolrQuery', 'return_type': 'SolrQuery'},
\     'addFacetQuery': { 'signature': 'string $facetQuery | SolrQuery', 'return_type': 'SolrQuery'},
\     'addField': { 'signature': 'string $field | SolrQuery', 'return_type': 'SolrQuery'},
\     'addFilterQuery': { 'signature': 'string $fq | SolrQuery', 'return_type': 'SolrQuery'},
\     'addHighlightField': { 'signature': 'string $field | SolrQuery', 'return_type': 'SolrQuery'},
\     'addMltField': { 'signature': 'string $field | SolrQuery', 'return_type': 'SolrQuery'},
\     'addMltQueryField': { 'signature': 'string $field, float $boost | SolrQuery', 'return_type': 'SolrQuery'},
\     'addSortField': { 'signature': 'string $field [, int $order = SolrQuery::ORDER_DESC] | SolrQuery', 'return_type': 'SolrQuery'},
\     'addStatsFacet': { 'signature': 'string $field | SolrQuery', 'return_type': 'SolrQuery'},
\     'addStatsField': { 'signature': 'string $field | SolrQuery', 'return_type': 'SolrQuery'},
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     '__destruct': { 'signature': 'void | void', 'return_type': 'void'},
\     'getFacet': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'getFacetDateEnd': { 'signature': '[ string $field_override] | string', 'return_type': 'string'},
\     'getFacetDateFields': { 'signature': 'void | array', 'return_type': 'array'},
\     'getFacetDateGap': { 'signature': '[ string $field_override] | string', 'return_type': 'string'},
\     'getFacetDateHardEnd': { 'signature': '[ string $field_override] | string', 'return_type': 'string'},
\     'getFacetDateOther': { 'signature': '[ string $field_override] | array', 'return_type': 'array'},
\     'getFacetDateStart': { 'signature': '[ string $field_override] | string', 'return_type': 'string'},
\     'getFacetFields': { 'signature': 'void | array', 'return_type': 'array'},
\     'getFacetLimit': { 'signature': '[ string $field_override] | int', 'return_type': 'int'},
\     'getFacetMethod': { 'signature': '[ string $field_override] | string', 'return_type': 'string'},
\     'getFacetMinCount': { 'signature': '[ string $field_override] | int', 'return_type': 'int'},
\     'getFacetMissing': { 'signature': '[ string $field_override] | bool', 'return_type': 'bool'},
\     'getFacetOffset': { 'signature': '[ string $field_override] | int', 'return_type': 'int'},
\     'getFacetPrefix': { 'signature': '[ string $field_override] | string', 'return_type': 'string'},
\     'getFacetQueries': { 'signature': 'void | array', 'return_type': 'array'},
\     'getFacetSort': { 'signature': '[ string $field_override] | int', 'return_type': 'int'},
\     'getFields': { 'signature': 'void | array', 'return_type': 'array'},
\     'getFilterQueries': { 'signature': 'void | array', 'return_type': 'array'},
\     'getHighlight': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'getHighlightAlternateField': { 'signature': '[ string $field_override] | string', 'return_type': 'string'},
\     'getHighlightFields': { 'signature': 'void | array', 'return_type': 'array'},
\     'getHighlightFormatter': { 'signature': '[ string $field_override] | string', 'return_type': 'string'},
\     'getHighlightFragmenter': { 'signature': '[ string $field_override] | string', 'return_type': 'string'},
\     'getHighlightFragsize': { 'signature': '[ string $field_override] | int', 'return_type': 'int'},
\     'getHighlightHighlightMultiTerm': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'getHighlightMaxAlternateFieldLength': { 'signature': '[ string $field_override] | int', 'return_type': 'int'},
\     'getHighlightMaxAnalyzedChars': { 'signature': 'void | int', 'return_type': 'int'},
\     'getHighlightMergeContiguous': { 'signature': '[ string $field_override] | bool', 'return_type': 'bool'},
\     'getHighlightRegexMaxAnalyzedChars': { 'signature': 'void | int', 'return_type': 'int'},
\     'getHighlightRegexPattern': { 'signature': 'void | string', 'return_type': 'string'},
\     'getHighlightRegexSlop': { 'signature': 'void | float', 'return_type': 'float'},
\     'getHighlightRequireFieldMatch': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'getHighlightSimplePost': { 'signature': '[ string $field_override] | string', 'return_type': 'string'},
\     'getHighlightSimplePre': { 'signature': '[ string $field_override] | string', 'return_type': 'string'},
\     'getHighlightSnippets': { 'signature': '[ string $field_override] | int', 'return_type': 'int'},
\     'getHighlightUsePhraseHighlighter': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'getMlt': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'getMltBoost': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'getMltCount': { 'signature': 'void | int', 'return_type': 'int'},
\     'getMltFields': { 'signature': 'void | array', 'return_type': 'array'},
\     'getMltMaxNumQueryTerms': { 'signature': 'void | int', 'return_type': 'int'},
\     'getMltMaxNumTokens': { 'signature': 'void | int', 'return_type': 'int'},
\     'getMltMaxWordLength': { 'signature': 'void | int', 'return_type': 'int'},
\     'getMltMinDocFrequency': { 'signature': 'void | int', 'return_type': 'int'},
\     'getMltMinTermFrequency': { 'signature': 'void | int', 'return_type': 'int'},
\     'getMltMinWordLength': { 'signature': 'void | int', 'return_type': 'int'},
\     'getMltQueryFields': { 'signature': 'void | array', 'return_type': 'array'},
\     'getQuery': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRows': { 'signature': 'void | int', 'return_type': 'int'},
\     'getSortFields': { 'signature': 'void | array', 'return_type': 'array'},
\     'getStart': { 'signature': 'void | int', 'return_type': 'int'},
\     'getStats': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'getStatsFacets': { 'signature': 'void | array', 'return_type': 'array'},
\     'getStatsFields': { 'signature': 'void | array', 'return_type': 'array'},
\     'getTerms': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'getTermsField': { 'signature': 'void | string', 'return_type': 'string'},
\     'getTermsIncludeLowerBound': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'getTermsIncludeUpperBound': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'getTermsLimit': { 'signature': 'void | int', 'return_type': 'int'},
\     'getTermsLowerBound': { 'signature': 'void | string', 'return_type': 'string'},
\     'getTermsMaxCount': { 'signature': 'void | int', 'return_type': 'int'},
\     'getTermsMinCount': { 'signature': 'void | int', 'return_type': 'int'},
\     'getTermsPrefix': { 'signature': 'void | string', 'return_type': 'string'},
\     'getTermsReturnRaw': { 'signature': 'void | bool', 'return_type': 'bool'},
\     'getTermsSort': { 'signature': 'void | int', 'return_type': 'int'},
\     'getTermsUpperBound': { 'signature': 'void | string', 'return_type': 'string'},
\     'getTimeAllowed': { 'signature': 'void | int', 'return_type': 'int'},
\     'removeFacetDateField': { 'signature': 'string $field | SolrQuery', 'return_type': 'SolrQuery'},
\     'removeFacetDateOther': { 'signature': 'string $value [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'removeFacetField': { 'signature': 'string $field | SolrQuery', 'return_type': 'SolrQuery'},
\     'removeFacetQuery': { 'signature': 'string $value | SolrQuery', 'return_type': 'SolrQuery'},
\     'removeField': { 'signature': 'string $field | SolrQuery', 'return_type': 'SolrQuery'},
\     'removeFilterQuery': { 'signature': 'string $fq | SolrQuery', 'return_type': 'SolrQuery'},
\     'removeHighlightField': { 'signature': 'string $field | SolrQuery', 'return_type': 'SolrQuery'},
\     'removeMltField': { 'signature': 'string $field | SolrQuery', 'return_type': 'SolrQuery'},
\     'removeMltQueryField': { 'signature': 'string $queryField | SolrQuery', 'return_type': 'SolrQuery'},
\     'removeSortField': { 'signature': 'string $field | SolrQuery', 'return_type': 'SolrQuery'},
\     'removeStatsFacet': { 'signature': 'string $value | SolrQuery', 'return_type': 'SolrQuery'},
\     'removeStatsField': { 'signature': 'string $field | SolrQuery', 'return_type': 'SolrQuery'},
\     'setEchoHandler': { 'signature': 'bool $flag | SolrQuery', 'return_type': 'SolrQuery'},
\     'setEchoParams': { 'signature': 'string $type | SolrQuery', 'return_type': 'SolrQuery'},
\     'setExplainOther': { 'signature': 'string $query | SolrQuery', 'return_type': 'SolrQuery'},
\     'setFacet': { 'signature': 'bool $flag | SolrQuery', 'return_type': 'SolrQuery'},
\     'setFacetDateEnd': { 'signature': 'string $value [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'setFacetDateGap': { 'signature': 'string $value [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'setFacetDateHardEnd': { 'signature': 'bool $value [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'setFacetDateStart': { 'signature': 'string $value [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'setFacetEnumCacheMinDefaultFrequency': { 'signature': 'int $frequency [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'setFacetLimit': { 'signature': 'int $limit [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'setFacetMethod': { 'signature': 'string $method [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'setFacetMinCount': { 'signature': 'int $mincount [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'setFacetMissing': { 'signature': 'bool $flag [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'setFacetOffset': { 'signature': 'int $offset [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'setFacetPrefix': { 'signature': 'string $prefix [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'setFacetSort': { 'signature': 'int $facetSort [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'setHighlight': { 'signature': 'bool $flag | SolrQuery', 'return_type': 'SolrQuery'},
\     'setHighlightAlternateField': { 'signature': 'string $field [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'setHighlightFormatter': { 'signature': 'string $formatter [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'setHighlightFragmenter': { 'signature': 'string $fragmenter [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'setHighlightFragsize': { 'signature': 'int $size [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'setHighlightHighlightMultiTerm': { 'signature': 'bool $flag | SolrQuery', 'return_type': 'SolrQuery'},
\     'setHighlightMaxAlternateFieldLength': { 'signature': 'int $fieldLength [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'setHighlightMaxAnalyzedChars': { 'signature': 'int $value | SolrQuery', 'return_type': 'SolrQuery'},
\     'setHighlightMergeContiguous': { 'signature': 'bool $flag [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'setHighlightRegexMaxAnalyzedChars': { 'signature': 'int $maxAnalyzedChars | SolrQuery', 'return_type': 'SolrQuery'},
\     'setHighlightRegexPattern': { 'signature': 'string $value | SolrQuery', 'return_type': 'SolrQuery'},
\     'setHighlightRegexSlop': { 'signature': 'float $factor | SolrQuery', 'return_type': 'SolrQuery'},
\     'setHighlightRequireFieldMatch': { 'signature': 'bool $flag | SolrQuery', 'return_type': 'SolrQuery'},
\     'setHighlightSimplePost': { 'signature': 'string $simplePost [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'setHighlightSimplePre': { 'signature': 'string $simplePre [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'setHighlightSnippets': { 'signature': 'int $value [, string $field_override] | SolrQuery', 'return_type': 'SolrQuery'},
\     'setHighlightUsePhraseHighlighter': { 'signature': 'bool $flag | SolrQuery', 'return_type': 'SolrQuery'},
\     'setMlt': { 'signature': 'bool $flag | SolrQuery', 'return_type': 'SolrQuery'},
\     'setMltBoost': { 'signature': 'bool $flag | SolrQuery', 'return_type': 'SolrQuery'},
\     'setMltCount': { 'signature': 'int $count | SolrQuery', 'return_type': 'SolrQuery'},
\     'setMltMaxNumQueryTerms': { 'signature': 'int $value | SolrQuery', 'return_type': 'SolrQuery'},
\     'setMltMaxNumTokens': { 'signature': 'int $value | SolrQuery', 'return_type': 'SolrQuery'},
\     'setMltMaxWordLength': { 'signature': 'int $maxWordLength | SolrQuery', 'return_type': 'SolrQuery'},
\     'setMltMinDocFrequency': { 'signature': 'int $minDocFrequency | SolrQuery', 'return_type': 'SolrQuery'},
\     'setMltMinTermFrequency': { 'signature': 'int $minTermFrequency | SolrQuery', 'return_type': 'SolrQuery'},
\     'setMltMinWordLength': { 'signature': 'int $minWordLength | SolrQuery', 'return_type': 'SolrQuery'},
\     'setOmitHeader': { 'signature': 'bool $flag | SolrQuery', 'return_type': 'SolrQuery'},
\     'setQuery': { 'signature': 'string $query | SolrQuery', 'return_type': 'SolrQuery'},
\     'setRows': { 'signature': 'int $rows | SolrQuery', 'return_type': 'SolrQuery'},
\     'setShowDebugInfo': { 'signature': 'bool $flag | SolrQuery', 'return_type': 'SolrQuery'},
\     'setStart': { 'signature': 'int $start | SolrQuery', 'return_type': 'SolrQuery'},
\     'setStats': { 'signature': 'bool $flag | SolrQuery', 'return_type': 'SolrQuery'},
\     'setTerms': { 'signature': 'bool $flag | SolrQuery', 'return_type': 'SolrQuery'},
\     'setTermsField': { 'signature': 'string $fieldname | SolrQuery', 'return_type': 'SolrQuery'},
\     'setTermsIncludeLowerBound': { 'signature': 'bool $flag | SolrQuery', 'return_type': 'SolrQuery'},
\     'setTermsIncludeUpperBound': { 'signature': 'bool $flag | SolrQuery', 'return_type': 'SolrQuery'},
\     'setTermsLimit': { 'signature': 'int $limit | SolrQuery', 'return_type': 'SolrQuery'},
\     'setTermsLowerBound': { 'signature': 'string $lowerBound | SolrQuery', 'return_type': 'SolrQuery'},
\     'setTermsMaxCount': { 'signature': 'int $frequency | SolrQuery', 'return_type': 'SolrQuery'},
\     'setTermsMinCount': { 'signature': 'int $frequency | SolrQuery', 'return_type': 'SolrQuery'},
\     'setTermsPrefix': { 'signature': 'string $prefix | SolrQuery', 'return_type': 'SolrQuery'},
\     'setTermsReturnRaw': { 'signature': 'bool $flag | SolrQuery', 'return_type': 'SolrQuery'},
\     'setTermsSort': { 'signature': 'int $sortType | SolrQuery', 'return_type': 'SolrQuery'},
\     'setTermsUpperBound': { 'signature': 'string $upperBound | SolrQuery', 'return_type': 'SolrQuery'},
\     'setTimeAllowed': { 'signature': 'int $timeAllowed | SolrQuery', 'return_type': 'SolrQuery'},
\   },
\   'static_methods': {
\   },
\},
\'SolrQueryResponse': {
\   'constants': {
\     'PARSE_SOLR_OBJ': '0',
\     'PARSE_SOLR_DOC': '1',
\     'SolrResponse::PARSE_SOLR_OBJ': '0',
\     'SolrResponse::PARSE_SOLR_DOC': '1',
\   },
\   'properties': {
\     'http_status': { 'initializer': '', 'type': 'integer'},
\     'parser_mode': { 'initializer': '', 'type': 'integer'},
\     'success': { 'initializer': '', 'type': 'bool'},
\     'http_status_message': { 'initializer': '', 'type': 'string'},
\     'http_request_url': { 'initializer': '', 'type': 'string'},
\     'http_raw_request_headers': { 'initializer': '', 'type': 'string'},
\     'http_raw_request': { 'initializer': '', 'type': 'string'},
\     'http_raw_response_headers': { 'initializer': '', 'type': 'string'},
\     'http_raw_response': { 'initializer': '', 'type': 'string'},
\     'http_digested_response': { 'initializer': '', 'type': 'string'},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     '__destruct': { 'signature': 'void | void', 'return_type': 'void'},
\     'getDigestedResponse': { 'signature': 'void | string', 'return_type': 'string'},
\     'getHttpStatus': { 'signature': 'void | int', 'return_type': 'int'},
\     'getHttpStatusMessage': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRawRequest': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRawRequestHeaders': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRawResponse': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRawResponseHeaders': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRequestUrl': { 'signature': 'void | string', 'return_type': 'string'},
\     'getResponse': { 'signature': 'void | SolrObject', 'return_type': 'SolrObject'},
\     'setParseMode': { 'signature': '[ int $parser_mode = 0] | bool', 'return_type': 'bool'},
\     'success': { 'signature': 'void | bool', 'return_type': 'bool'},
\   },
\   'static_methods': {
\   },
\},
\'SolrResponse': {
\   'constants': {
\     'PARSE_SOLR_OBJ': '0',
\     'PARSE_SOLR_DOC': '1',
\   },
\   'properties': {
\     'http_status': { 'initializer': '', 'type': 'integer'},
\     'parser_mode': { 'initializer': '', 'type': 'integer'},
\     'success': { 'initializer': '', 'type': 'bool'},
\     'http_status_message': { 'initializer': '', 'type': 'string'},
\     'http_request_url': { 'initializer': '', 'type': 'string'},
\     'http_raw_request_headers': { 'initializer': '', 'type': 'string'},
\     'http_raw_request': { 'initializer': '', 'type': 'string'},
\     'http_raw_response_headers': { 'initializer': '', 'type': 'string'},
\     'http_raw_response': { 'initializer': '', 'type': 'string'},
\     'http_digested_response': { 'initializer': '', 'type': 'string'},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     'getDigestedResponse': { 'signature': 'void | string', 'return_type': 'string'},
\     'getHttpStatus': { 'signature': 'void | int', 'return_type': 'int'},
\     'getHttpStatusMessage': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRawRequest': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRawRequestHeaders': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRawResponse': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRawResponseHeaders': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRequestUrl': { 'signature': 'void | string', 'return_type': 'string'},
\     'getResponse': { 'signature': 'void | SolrObject', 'return_type': 'SolrObject'},
\     'setParseMode': { 'signature': '[ int $parser_mode = 0] | bool', 'return_type': 'bool'},
\     'success': { 'signature': 'void | bool', 'return_type': 'bool'},
\   },
\   'static_methods': {
\   },
\},
\'SolrUpdateResponse': {
\   'constants': {
\     'PARSE_SOLR_OBJ': '0',
\     'PARSE_SOLR_DOC': '1',
\     'SolrResponse::PARSE_SOLR_OBJ': '0',
\     'SolrResponse::PARSE_SOLR_DOC': '1',
\   },
\   'properties': {
\     'http_status': { 'initializer': '', 'type': 'integer'},
\     'parser_mode': { 'initializer': '', 'type': 'integer'},
\     'success': { 'initializer': '', 'type': 'bool'},
\     'http_status_message': { 'initializer': '', 'type': 'string'},
\     'http_request_url': { 'initializer': '', 'type': 'string'},
\     'http_raw_request_headers': { 'initializer': '', 'type': 'string'},
\     'http_raw_request': { 'initializer': '', 'type': 'string'},
\     'http_raw_response_headers': { 'initializer': '', 'type': 'string'},
\     'http_raw_response': { 'initializer': '', 'type': 'string'},
\     'http_digested_response': { 'initializer': '', 'type': 'string'},
\   },
\   'static_properties': {
\   },
\   'methods': {
\     '__construct': { 'signature': 'void', 'return_type': ''},
\     '__destruct': { 'signature': 'void | void', 'return_type': 'void'},
\     'getDigestedResponse': { 'signature': 'void | string', 'return_type': 'string'},
\     'getHttpStatus': { 'signature': 'void | int', 'return_type': 'int'},
\     'getHttpStatusMessage': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRawRequest': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRawRequestHeaders': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRawResponse': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRawResponseHeaders': { 'signature': 'void | string', 'return_type': 'string'},
\     'getRequestUrl': { 'signature': 'void | string', 'return_type': 'string'},
\     'getResponse': { 'signature': 'void | SolrObject', 'return_type': 'SolrObject'},
\     'setParseMode': { 'signature': '[ int $parser_mode = 0] | bool', 'return_type': 'bool'},
\     'success': { 'signature': 'void | bool', 'return_type': 'bool'},
\   },
\   'static_methods': {
\   },
\},
\'SolrUtils': {
\   'constants': {
\   },
\   'properties': {
\   },
\   'static_properties': {
\   },
\   'methods': {
\   },
\   'static_methods': {
\     'digestXmlResponse': { 'signature': 'string $xmlresponse [, int $parse_mode = 0] | SolrObject', 'return_type': 'SolrObject'},
\     'escapeQueryChars': { 'signature': 'string $str | string', 'return_type': 'string'},
\     'getSolrVersion': { 'signature': 'void | string', 'return_type': 'string'},
\     'queryPhrase': { 'signature': 'string $str | string', 'return_type': 'string'},
\   },
\},
\})
